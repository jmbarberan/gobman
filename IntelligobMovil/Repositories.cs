#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace IntelligobMovil.Repositories
{
	using Telerik.OpenAccess;
	using Intelligob.Entidades;
	using System;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.Serialization;

	
	public partial interface IRepository<TEntity>
	{
	    void Add(TEntity entity);
	    void Remove(TEntity entity);
	
	    TEntity Get(ObjectKey objectKey);
	    
	    IQueryable<TEntity> GetAll();
	
	    IQueryable<TEntity> Find(Expression<Func<TEntity, bool>> predicate);
	}
	
	public partial class Repository<TEntity> : IRepository<TEntity>
	        where TEntity : class
	{
	    protected IUnitOfWork unitOfWork;
	
	    public Repository(IUnitOfWork unitOfWork)
	    {
	        this.unitOfWork = unitOfWork;
	    }
	
	    public void Add(TEntity entity)
	    {
			this.unitOfWork.Add(entity);
	    }
	
	    public void Remove(TEntity entity)
	    {
	        this.unitOfWork.Delete(entity);
	    }
	
	    public IQueryable<TEntity> GetAll()
	    {
	        return this.unitOfWork.GetAll<TEntity>();
	    }
	
	    public TEntity Get(ObjectKey objectKey)
	    {
	        return this.unitOfWork.GetObjectByKey<TEntity>(objectKey);
	    }
	
	    public IQueryable<TEntity> Find(Expression<Func<TEntity, bool>> predicate)
	    {
	        return this.unitOfWork.GetAll<TEntity>().Where(predicate);
	    }
	}
	
	public partial interface ITablaClaveRepository : IRepository<TablaClave>
	{ 
	
	}
	
	public partial class TablaClaveRepository : Repository<TablaClave>, ITablaClaveRepository
	{
	    public TablaClaveRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ITablaRepository : IRepository<Tabla>
	{ 
	
	}
	
	public partial class TablaRepository : Repository<Tabla>, ITablaRepository
	{
	    public TablaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IContribuyenteRepository : IRepository<Contribuyente>
	{ 
	
	}
	
	public partial class ContribuyenteRepository : Repository<Contribuyente>, IContribuyenteRepository
	{
	    public ContribuyenteRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRubroRepository : IRepository<Rubro>
	{ 
	
	}
	
	public partial class RubroRepository : Repository<Rubro>, IRubroRepository
	{
	    public RubroRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRebajasRubroRepository : IRepository<RebajasRubro>
	{ 
	
	}
	
	public partial class RebajasRubroRepository : Repository<RebajasRubro>, IRebajasRubroRepository
	{
	    public RebajasRubroRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRebajaRepository : IRepository<Rebaja>
	{ 
	
	}
	
	public partial class RebajaRepository : Repository<Rebaja>, IRebajaRepository
	{
	    public RebajaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IContribuyentesRebajaRepository : IRepository<ContribuyentesRebaja>
	{ 
	
	}
	
	public partial class ContribuyentesRebajaRepository : Repository<ContribuyentesRebaja>, IContribuyentesRebajaRepository
	{
	    public ContribuyentesRebajaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioTerrenoRepository : IRepository<PredioTerreno>
	{ 
	
	}
	
	public partial class PredioTerrenoRepository : Repository<PredioTerreno>, IPredioTerrenoRepository
	{
	    public PredioTerrenoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioTablaRepository : IRepository<PredioTabla>
	{ 
	
	}
	
	public partial class PredioTablaRepository : Repository<PredioTabla>, IPredioTablaRepository
	{
	    public PredioTablaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioPropietarioRepository : IRepository<PredioPropietario>
	{ 
	
	}
	
	public partial class PredioPropietarioRepository : Repository<PredioPropietario>, IPredioPropietarioRepository
	{
	    public PredioPropietarioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioPisoRepository : IRepository<PredioPiso>
	{ 
	
	}
	
	public partial class PredioPisoRepository : Repository<PredioPiso>, IPredioPisoRepository
	{
	    public PredioPisoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioFrenteRepository : IRepository<PredioFrente>
	{ 
	
	}
	
	public partial class PredioFrenteRepository : Repository<PredioFrente>, IPredioFrenteRepository
	{
	    public PredioFrenteRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioFotoRepository : IRepository<PredioFoto>
	{ 
	
	}
	
	public partial class PredioFotoRepository : Repository<PredioFoto>, IPredioFotoRepository
	{
	    public PredioFotoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioConstruccionRepository : IRepository<PredioConstruccion>
	{ 
	
	}
	
	public partial class PredioConstruccionRepository : Repository<PredioConstruccion>, IPredioConstruccionRepository
	{
	    public PredioConstruccionRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioBloqueRepository : IRepository<PredioBloque>
	{ 
	
	}
	
	public partial class PredioBloqueRepository : Repository<PredioBloque>, IPredioBloqueRepository
	{
	    public PredioBloqueRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPredioBaseRepository : IRepository<PredioBase>
	{ 
	
	}
	
	public partial class PredioBaseRepository : Repository<PredioBase>, IPredioBaseRepository
	{
	    public PredioBaseRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IServicioRepository : IRepository<Servicio>
	{ 
	
	}
	
	public partial class ServicioRepository : Repository<Servicio>, IServicioRepository
	{
	    public ServicioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPatenteRepository : IRepository<Patente>
	{ 
	
	}
	
	public partial class PatenteRepository : Repository<Patente>, IPatenteRepository
	{
	    public PatenteRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IAguaPotableRepository : IRepository<AguaPotable>
	{ 
	
	}
	
	public partial class AguaPotableRepository : Repository<AguaPotable>, IAguaPotableRepository
	{
	    public AguaPotableRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IAguaLecturaRepository : IRepository<AguaLectura>
	{ 
	
	}
	
	public partial class AguaLecturaRepository : Repository<AguaLectura>, IAguaLecturaRepository
	{
	    public AguaLecturaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPatentesComponenteRepository : IRepository<PatentesComponente>
	{ 
	
	}
	
	public partial class PatentesComponenteRepository : Repository<PatentesComponente>, IPatentesComponenteRepository
	{
	    public PatentesComponenteRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IConceptoRepository : IRepository<Concepto>
	{ 
	
	}
	
	public partial class ConceptoRepository : Repository<Concepto>, IConceptoRepository
	{
	    public ConceptoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICoeficienteRepository : IRepository<Coeficiente>
	{ 
	
	}
	
	public partial class CoeficienteRepository : Repository<Coeficiente>, ICoeficienteRepository
	{
	    public CoeficienteRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICoeficienteElementoRepository : IRepository<CoeficienteElemento>
	{ 
	
	}
	
	public partial class CoeficienteElementoRepository : Repository<CoeficienteElemento>, ICoeficienteElementoRepository
	{
	    public CoeficienteElementoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ISupervisionRepository : IRepository<Supervision>
	{ 
	
	}
	
	public partial class SupervisionRepository : Repository<Supervision>, ISupervisionRepository
	{
	    public SupervisionRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPrivilegioRepository : IRepository<Privilegio>
	{ 
	
	}
	
	public partial class PrivilegioRepository : Repository<Privilegio>, IPrivilegioRepository
	{
	    public PrivilegioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IUsuarioRepository : IRepository<Usuario>
	{ 
	
	}
	
	public partial class UsuarioRepository : Repository<Usuario>, IUsuarioRepository
	{
	    public UsuarioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IComandoRepository : IRepository<Comando>
	{ 
	
	}
	
	public partial class ComandoRepository : Repository<Comando>, IComandoRepository
	{
	    public ComandoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IFuncionRepository : IRepository<Funcion>
	{ 
	
	}
	
	public partial class FuncionRepository : Repository<Funcion>, IFuncionRepository
	{
	    public FuncionRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IAutorizacionRepository : IRepository<Autorizacion>
	{ 
	
	}
	
	public partial class AutorizacionRepository : Repository<Autorizacion>, IAutorizacionRepository
	{
	    public AutorizacionRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IModuloUsuarioRepository : IRepository<ModuloUsuario>
	{ 
	
	}
	
	public partial class ModuloUsuarioRepository : Repository<ModuloUsuario>, IModuloUsuarioRepository
	{
	    public ModuloUsuarioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ISeguimientoRepository : IRepository<Seguimiento>
	{ 
	
	}
	
	public partial class SeguimientoRepository : Repository<Seguimiento>, ISeguimientoRepository
	{
	    public SeguimientoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRubrosParametroRepository : IRepository<RubrosParametro>
	{ 
	
	}
	
	public partial class RubrosParametroRepository : Repository<RubrosParametro>, IRubrosParametroRepository
	{
	    public RubrosParametroRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IConceptosRubroRepository : IRepository<ConceptosRubro>
	{ 
	
	}
	
	public partial class ConceptosRubroRepository : Repository<ConceptosRubro>, IConceptosRubroRepository
	{
	    public ConceptosRubroRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IConceptosDocumentoRepository : IRepository<ConceptosDocumento>
	{ 
	
	}
	
	public partial class ConceptosDocumentoRepository : Repository<ConceptosDocumento>, IConceptosDocumentoRepository
	{
	    public ConceptosDocumentoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IAguaServicioRepository : IRepository<AguaServicio>
	{ 
	
	}
	
	public partial class AguaServicioRepository : Repository<AguaServicio>, IAguaServicioRepository
	{
	    public AguaServicioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPlanillaSustitucionRepository : IRepository<PlanillaSustitucion>
	{ 
	
	}
	
	public partial class PlanillaSustitucionRepository : Repository<PlanillaSustitucion>, IPlanillaSustitucionRepository
	{
	    public PlanillaSustitucionRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPlanillaRubroRepository : IRepository<PlanillaRubro>
	{ 
	
	}
	
	public partial class PlanillaRubroRepository : Repository<PlanillaRubro>, IPlanillaRubroRepository
	{
	    public PlanillaRubroRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPlanillaAtributoRepository : IRepository<PlanillaAtributo>
	{ 
	
	}
	
	public partial class PlanillaAtributoRepository : Repository<PlanillaAtributo>, IPlanillaAtributoRepository
	{
	    public PlanillaAtributoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPlanillaRepository : IRepository<Planilla>
	{ 
	
	}
	
	public partial class PlanillaRepository : Repository<Planilla>, IPlanillaRepository
	{
	    public PlanillaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IConvenioTransaccionRepository : IRepository<ConvenioTransaccion>
	{ 
	
	}
	
	public partial class ConvenioTransaccionRepository : Repository<ConvenioTransaccion>, IConvenioTransaccionRepository
	{
	    public ConvenioTransaccionRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IConvenioRepository : IRepository<Convenio>
	{ 
	
	}
	
	public partial class ConvenioRepository : Repository<Convenio>, IConvenioRepository
	{
	    public ConvenioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICobroTransaccionRepository : IRepository<CobroTransaccion>
	{ 
	
	}
	
	public partial class CobroTransaccionRepository : Repository<CobroTransaccion>, ICobroTransaccionRepository
	{
	    public CobroTransaccionRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICobroRepository : IRepository<Cobro>
	{ 
	
	}
	
	public partial class CobroRepository : Repository<Cobro>, ICobroRepository
	{
	    public CobroRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICobrosElementoRepository : IRepository<CobrosElemento>
	{ 
	
	}
	
	public partial class CobrosElementoRepository : Repository<CobrosElemento>, ICobrosElementoRepository
	{
	    public CobrosElementoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICobrosRubroRepository : IRepository<CobrosRubro>
	{ 
	
	}
	
	public partial class CobrosRubroRepository : Repository<CobrosRubro>, ICobrosRubroRepository
	{
	    public CobrosRubroRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRepRecaudacionesFechaRepository : IRepository<RepRecaudacionesFecha>
	{ 
	
	}
	
	public partial class RepRecaudacionesFechaRepository : Repository<RepRecaudacionesFecha>, IRepRecaudacionesFechaRepository
	{
	    public RepRecaudacionesFechaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRepEmisionesSaldoRepository : IRepository<RepEmisionesSaldo>
	{ 
	
	}
	
	public partial class RepEmisionesSaldoRepository : Repository<RepEmisionesSaldo>, IRepEmisionesSaldoRepository
	{
	    public RepEmisionesSaldoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IConceptosEmisionRepository : IRepository<ConceptosEmision>
	{ 
	
	}
	
	public partial class ConceptosEmisionRepository : Repository<ConceptosEmision>, IConceptosEmisionRepository
	{
	    public ConceptosEmisionRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IModuloRepository : IRepository<Modulo>
	{ 
	
	}
	
	public partial class ModuloRepository : Repository<Modulo>, IModuloRepository
	{
	    public ModuloRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IReporteRepository : IRepository<Reporte>
	{ 
	
	}
	
	public partial class ReporteRepository : Repository<Reporte>, IReporteRepository
	{
	    public ReporteRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRepCuentaCorrienteResumenRepository : IRepository<RepCuentaCorrienteResumen>
	{ 
	
	}
	
	public partial class RepCuentaCorrienteResumenRepository : Repository<RepCuentaCorrienteResumen>, IRepCuentaCorrienteResumenRepository
	{
	    public RepCuentaCorrienteResumenRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRepCuentaCorrienteDetalleRepository : IRepository<RepCuentaCorrienteDetalle>
	{ 
	
	}
	
	public partial class RepCuentaCorrienteDetalleRepository : Repository<RepCuentaCorrienteDetalle>, IRepCuentaCorrienteDetalleRepository
	{
	    public RepCuentaCorrienteDetalleRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICajaRepository : IRepository<Caja>
	{ 
	
	}
	
	public partial class CajaRepository : Repository<Caja>, ICajaRepository
	{
	    public CajaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICajasUsuarioRepository : IRepository<CajasUsuario>
	{ 
	
	}
	
	public partial class CajasUsuarioRepository : Repository<CajasUsuario>, ICajasUsuarioRepository
	{
	    public CajasUsuarioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRepPredioRepository : IRepository<RepPredio>
	{ 
	
	}
	
	public partial class RepPredioRepository : Repository<RepPredio>, IRepPredioRepository
	{
	    public RepPredioRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICuentaBancariaRepository : IRepository<CuentaBancaria>
	{ 
	
	}
	
	public partial class CuentaBancariaRepository : Repository<CuentaBancaria>, ICuentaBancariaRepository
	{
	    public CuentaBancariaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICajaElementoRepository : IRepository<CajaElemento>
	{ 
	
	}
	
	public partial class CajaElementoRepository : Repository<CajaElemento>, ICajaElementoRepository
	{
	    public CajaElementoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICajaComprobanteRepository : IRepository<CajaComprobante>
	{ 
	
	}
	
	public partial class CajaComprobanteRepository : Repository<CajaComprobante>, ICajaComprobanteRepository
	{
	    public CajaComprobanteRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICarpetaCatastralAnualRepository : IRepository<CarpetaCatastralAnual>
	{ 
	
	}
	
	public partial class CarpetaCatastralAnualRepository : Repository<CarpetaCatastralAnual>, ICarpetaCatastralAnualRepository
	{
	    public CarpetaCatastralAnualRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ISoporteRepository : IRepository<Soporte>
	{ 
	
	}
	
	public partial class SoporteRepository : Repository<Soporte>, ISoporteRepository
	{
	    public SoporteRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ISoporteMovimientoRepository : IRepository<SoporteMovimiento>
	{ 
	
	}
	
	public partial class SoporteMovimientoRepository : Repository<SoporteMovimiento>, ISoporteMovimientoRepository
	{
	    public SoporteMovimientoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IMejoraElementoRepository : IRepository<MejoraElemento>
	{ 
	
	}
	
	public partial class MejoraElementoRepository : Repository<MejoraElemento>, IMejoraElementoRepository
	{
	    public MejoraElementoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IMejoraRepository : IRepository<Mejora>
	{ 
	
	}
	
	public partial class MejoraRepository : Repository<Mejora>, IMejoraRepository
	{
	    public MejoraRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRepRecaudacionesCompDetalleRepository : IRepository<RepRecaudacionesCompDetalle>
	{ 
	
	}
	
	public partial class RepRecaudacionesCompDetalleRepository : Repository<RepRecaudacionesCompDetalle>, IRepRecaudacionesCompDetalleRepository
	{
	    public RepRecaudacionesCompDetalleRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICobrosNotasElementoRepository : IRepository<CobrosNotasElemento>
	{ 
	
	}
	
	public partial class CobrosNotasElementoRepository : Repository<CobrosNotasElemento>, ICobrosNotasElementoRepository
	{
	    public CobrosNotasElementoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICobrosNotaRepository : IRepository<CobrosNota>
	{ 
	
	}
	
	public partial class CobrosNotaRepository : Repository<CobrosNota>, ICobrosNotaRepository
	{
	    public CobrosNotaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IRepReversionesFechaRepository : IRepository<RepReversionesFecha>
	{ 
	
	}
	
	public partial class RepReversionesFechaRepository : Repository<RepReversionesFecha>, IRepReversionesFechaRepository
	{
	    public RepReversionesFechaRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IConveniosDividendoRepository : IRepository<ConveniosDividendo>
	{ 
	
	}
	
	public partial class ConveniosDividendoRepository : Repository<ConveniosDividendo>, IConveniosDividendoRepository
	{
	    public ConveniosDividendoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPlanillaMesRepository : IRepository<PlanillaMes>
	{ 
	
	}
	
	public partial class PlanillaMesRepository : Repository<PlanillaMes>, IPlanillaMesRepository
	{
	    public PlanillaMesRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IMercadoRepository : IRepository<Mercado>
	{ 
	
	}
	
	public partial class MercadoRepository : Repository<Mercado>, IMercadoRepository
	{
	    public MercadoRepository(IModeloUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
}
#pragma warning restore 1591
