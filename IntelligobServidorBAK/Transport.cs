#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Intelligob.Entidades;
using System;
using System.Linq;
using System.Linq.Expressions;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Intelligob.Servidor.Dto
{
	public interface IDtoWithKey
	{
		string DtoKey { get; set; }
	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(TablaDto))]
	[KnownType(typeof(CuentaBancariaDto))]
	public partial class TablaClaveDto : IDtoWithKey
	{
		public TablaClaveDto()
		{
		}
		
		public TablaClaveDto(int mId, int? mTabla, int? mClave, string mCodigo, string mDenominacion, double? mValor, int? mSuperior, int? mEstado, TablaDto mTabla1, IList<CuentaBancariaDto> mCuentasbancarias)
		{
			this.Id = mId;
			this.Tabla = mTabla;
			this.Clave = mClave;
			this.Codigo = mCodigo;
			this.Denominacion = mDenominacion;
			this.Valor = mValor;
			this.Superior = mSuperior;
			this.Estado = mEstado;
			this.TablaNav = mTabla1;
			this.CuentasBancarias = mCuentasbancarias;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Tabla { get;set; }

		[DataMember]
		public virtual int? Clave { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Superior { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual TablaDto TablaNav { get;set; }

		[DataMember]
		public virtual IList<CuentaBancariaDto> CuentasBancarias { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(TablaClaveDto))]
	public partial class TablaDto : IDtoWithKey
	{
		public TablaDto()
		{
		}
		
		public TablaDto(int mId, string mDenominacion, int? mIndice, int? mParticular, int? mEstado, IList<TablaClaveDto> mTablasclaves)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Indice = mIndice;
			this.Particular = mParticular;
			this.Estado = mEstado;
			this.ClavesNav = mTablasclaves;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Indice { get;set; }

		[DataMember]
		public virtual int? Particular { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual IList<TablaClaveDto> ClavesNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(ContribuyentesRebajaDto))]
	public partial class ContribuyenteDto : IDtoWithKey
	{
		public ContribuyenteDto()
		{
		}
		
		public ContribuyenteDto(int mId, string mCedula, string mNombres, string mRepresentante, string mDireccion, string mTelefonos, int? mEstado, int? mPersoneria, TablaClaveDto mPersoneriaNav, IList<ContribuyentesRebajaDto> mContribuyentesrebajas)
		{
			this.Id = mId;
			this.Cedula = mCedula;
			this.Nombres = mNombres;
			this.Representante = mRepresentante;
			this.Direccion = mDireccion;
			this.Telefonos = mTelefonos;
			this.Estado = mEstado;
			this.Personeria = mPersoneria;
			this.PersoneriaNav = mPersoneriaNav;
			this.RebajasNav = mContribuyentesrebajas;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Cedula { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual string Representante { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual string Telefonos { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Personeria { get;set; }

		[DataMember]
		public virtual TablaClaveDto PersoneriaNav { get;set; }

		[DataMember]
		public virtual IList<ContribuyentesRebajaDto> RebajasNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(RubrosParametroDto))]
	public partial class RubroDto : IDtoWithKey
	{
		public RubroDto()
		{
		}
		
		public RubroDto(int mId, string mDenoninacion, int? mTipo, int? mTabla, double? mValor, int? mEmision, double? mDenominador, int? mOrigen, int? mEstado, string mCalculadora, string mRebajascodigos, int? mAfectante, int? mPropiedad, IList<RubrosParametroDto> mRubrosparametros)
		{
			this.Id = mId;
			this.Denoninacion = mDenoninacion;
			this.Tipo = mTipo;
			this.Tabla = mTabla;
			this.Valor = mValor;
			this.Emision = mEmision;
			this.Denominador = mDenominador;
			this.Origen = mOrigen;
			this.Estado = mEstado;
			this.Calculadora = mCalculadora;
			this.RebajasCodigos = mRebajascodigos;
			this.Afectante = mAfectante;
			this.Propiedad = mPropiedad;
			this.ParametrosNav = mRubrosparametros;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denoninacion { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual int? Tabla { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Emision { get;set; }

		[DataMember]
		public virtual double? Denominador { get;set; }

		[DataMember]
		public virtual int? Origen { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual string Calculadora { get;set; }

		[DataMember]
		public virtual string RebajasCodigos { get;set; }

		[DataMember]
		public virtual int? Afectante { get;set; }

		[DataMember]
		public virtual int? Propiedad { get;set; }

		[DataMember]
		public virtual IList<RubrosParametroDto> ParametrosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(RubroDto))]
	public partial class RebajasRubroDto : IDtoWithKey
	{
		public RebajasRubroDto()
		{
		}
		
		public RebajasRubroDto(int mId, int? mRebaja, int? mRubro, int? mTipo, double? mValor, double? mDenominador, int? mPersonal, int? mEstado, RubroDto mRubro1)
		{
			this.Id = mId;
			this.Rebaja = mRebaja;
			this.Rubro = mRubro;
			this.Tipo = mTipo;
			this.Valor = mValor;
			this.Denominador = mDenominador;
			this.Personal = mPersonal;
			this.Estado = mEstado;
			this.NavRubro = mRubro1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Rebaja { get;set; }

		[DataMember]
		public virtual int? Rubro { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual double? Denominador { get;set; }

		[DataMember]
		public virtual int? Personal { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual RubroDto NavRubro { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ConceptoDto))]
	[KnownType(typeof(RebajasRubroDto))]
	public partial class RebajaDto : IDtoWithKey
	{
		public RebajaDto()
		{
		}
		
		public RebajaDto(int mId, string mDenominacion, string mComentarios, int? mConcepto, int? mEstado, double? mFraccion, ConceptoDto mConcepto1, IList<RebajasRubroDto> mRebajasrubros)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Comentarios = mComentarios;
			this.Concepto = mConcepto;
			this.Estado = mEstado;
			this.Fraccion = mFraccion;
			this.ConceptoNav = mConcepto1;
			this.RubrosNav = mRebajasrubros;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual string Comentarios { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? Fraccion { get;set; }

		[DataMember]
		public virtual ConceptoDto ConceptoNav { get;set; }

		[DataMember]
		public virtual IList<RebajasRubroDto> RubrosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(RebajaDto))]
	public partial class ContribuyentesRebajaDto : IDtoWithKey
	{
		public ContribuyentesRebajaDto()
		{
		}
		
		public ContribuyentesRebajaDto(int mId, int? mContribuyente, int? mAño, int? mRebaja, int? mPersonal, int? mEstado, double? mFraccion, RebajaDto mRebaja1)
		{
			this.Id = mId;
			this.Contribuyente = mContribuyente;
			this.Año = mAño;
			this.Rebaja = mRebaja;
			this.Personal = mPersonal;
			this.Estado = mEstado;
			this.Fraccion = mFraccion;
			this.RebajaNav = mRebaja1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual int? Año { get;set; }

		[DataMember]
		public virtual int? Rebaja { get;set; }

		[DataMember]
		public virtual int? Personal { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? Fraccion { get;set; }

		[DataMember]
		public virtual RebajaDto RebajaNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioBaseDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(TablaClaveDto))]
	public partial class PredioTerrenoDto : IDtoWithKey
	{
		public PredioTerrenoDto()
		{
		}
		
		public PredioTerrenoDto(int mId, int? mPredio, string mLinderonortenombres, int? mLinderonortepredio, double? mLinderonorteextension, string mLinderosurnombres, int? mLinderosurpredio, double? mLinderosurextension, string mLinderoestenombres, int? mLinderoestepredio, double? mLinderoesteextension, string mLinderooestenombres, int? mLinderooestepredio, double? mLinderooesteextension, double? mSuperficie, int? mNumerolados, int? mNumeroangulosrectos, double? mPerimetro, int? mCalidadsuelo, int? mLocalizacionmanzana, int? mNivelrazante, int? mFuenteagua, int? mEstado, double? mFrente, double? mFondo, int? mZonaHomogenea, int? mClaseTierra, double? mAvaluo, PredioBaseDto mPrediosbase, TablaClaveDto mCalidadSueloNav, TablaClaveDto mRazanteNav, TablaClaveDto mTablaclave2)
		{
			this.Id = mId;
			this.Predio = mPredio;
			this.LinderoNorteNombres = mLinderonortenombres;
			this.LinderoNortePredio = mLinderonortepredio;
			this.LinderoNorteExtension = mLinderonorteextension;
			this.LinderoSurNombres = mLinderosurnombres;
			this.LinderoSurPredio = mLinderosurpredio;
			this.LinderoSurExtension = mLinderosurextension;
			this.LinderoEsteNombres = mLinderoestenombres;
			this.LinderoEstePredio = mLinderoestepredio;
			this.LinderoEsteExtension = mLinderoesteextension;
			this.LinderoOesteNombres = mLinderooestenombres;
			this.LinderoOestePredio = mLinderooestepredio;
			this.LinderoOesteExtension = mLinderooesteextension;
			this.Superficie = mSuperficie;
			this.NumeroLados = mNumerolados;
			this.NumeroAngulosRectos = mNumeroangulosrectos;
			this.Perimetro = mPerimetro;
			this.CalidadSuelo = mCalidadsuelo;
			this.LocalizacionManzana = mLocalizacionmanzana;
			this.NivelRazante = mNivelrazante;
			this.FuenteAgua = mFuenteagua;
			this.Estado = mEstado;
			this.Frente = mFrente;
			this.Fondo = mFondo;
			this.ZonaHomogenea = mZonaHomogenea;
			this.ClaseTierra = mClaseTierra;
			this.Avaluo = mAvaluo;
			this.PredioNav = mPrediosbase;
			this.CalidadSueloNav = mCalidadSueloNav;
			this.RazanteNav = mRazanteNav;
			this.LocManzanaNav = mTablaclave2;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual string LinderoNorteNombres { get;set; }

		[DataMember]
		public virtual int? LinderoNortePredio { get;set; }

		[DataMember]
		public virtual double? LinderoNorteExtension { get;set; }

		[DataMember]
		public virtual string LinderoSurNombres { get;set; }

		[DataMember]
		public virtual int? LinderoSurPredio { get;set; }

		[DataMember]
		public virtual double? LinderoSurExtension { get;set; }

		[DataMember]
		public virtual string LinderoEsteNombres { get;set; }

		[DataMember]
		public virtual int? LinderoEstePredio { get;set; }

		[DataMember]
		public virtual double? LinderoEsteExtension { get;set; }

		[DataMember]
		public virtual string LinderoOesteNombres { get;set; }

		[DataMember]
		public virtual int? LinderoOestePredio { get;set; }

		[DataMember]
		public virtual double? LinderoOesteExtension { get;set; }

		[DataMember]
		public virtual double? Superficie { get;set; }

		[DataMember]
		public virtual int? NumeroLados { get;set; }

		[DataMember]
		public virtual int? NumeroAngulosRectos { get;set; }

		[DataMember]
		public virtual double? Perimetro { get;set; }

		[DataMember]
		public virtual int? CalidadSuelo { get;set; }

		[DataMember]
		public virtual int? LocalizacionManzana { get;set; }

		[DataMember]
		public virtual int? NivelRazante { get;set; }

		[DataMember]
		public virtual int? FuenteAgua { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? Frente { get;set; }

		[DataMember]
		public virtual double? Fondo { get;set; }

		[DataMember]
		public virtual int? ZonaHomogenea { get;set; }

		[DataMember]
		public virtual int? ClaseTierra { get;set; }

		[DataMember]
		public virtual double? Avaluo { get;set; }

		[DataMember]
		public virtual PredioBaseDto PredioNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto CalidadSueloNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto RazanteNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto LocManzanaNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioBaseDto))]
	public partial class PredioTablaDto : IDtoWithKey
	{
		public PredioTablaDto()
		{
		}
		
		public PredioTablaDto(int mId, int? mPredio, int? mTabla, int? mClave, int? mEstado, PredioBaseDto mPrediosbase)
		{
			this.Id = mId;
			this.Predio = mPredio;
			this.Tabla = mTabla;
			this.Clave = mClave;
			this.Estado = mEstado;
			this.PredioNav = mPrediosbase;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual int? Tabla { get;set; }

		[DataMember]
		public virtual int? Clave { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual PredioBaseDto PredioNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioBaseDto))]
	[KnownType(typeof(ContribuyenteDto))]
	public partial class PredioPropietarioDto : IDtoWithKey
	{
		public PredioPropietarioDto()
		{
		}
		
		public PredioPropietarioDto(int mId, int? mPredio, int? mContribuyente, int? mEstado, PredioBaseDto mPrediosbase, ContribuyenteDto mContribuyenteNav)
		{
			this.Id = mId;
			this.Predio = mPredio;
			this.Contribuyente = mContribuyente;
			this.Estado = mEstado;
			this.PredioNav = mPrediosbase;
			this.ContribuyenteNav = mContribuyenteNav;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual PredioBaseDto PredioNav { get;set; }

		[DataMember]
		public virtual ContribuyenteDto ContribuyenteNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioBloqueDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(PredioConstruccionDto))]
	public partial class PredioPisoDto : IDtoWithKey
	{
		public PredioPisoDto()
		{
		}
		
		public PredioPisoDto(int mId, int? mBloque, int? mPiso, string mDescripcion, string mDireccion, int? mEdadconstruccion, double? mSuperficie, int? mConservacion, string mObservaciones, double? mSuperficiecomun, PredioBloqueDto mBloqueNav, TablaClaveDto mConservacionNav, IList<PredioConstruccionDto> mPrediosconstruccions)
		{
			this.Id = mId;
			this.Bloque = mBloque;
			this.Piso = mPiso;
			this.Descripcion = mDescripcion;
			this.Direccion = mDireccion;
			this.EdadConstruccion = mEdadconstruccion;
			this.Superficie = mSuperficie;
			this.Conservacion = mConservacion;
			this.Observaciones = mObservaciones;
			this.SuperficieComun = mSuperficiecomun;
			this.BloqueNav = mBloqueNav;
			this.ConservacionNav = mConservacionNav;
			this.ConstruccionesNav = mPrediosconstruccions;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Bloque { get;set; }

		[DataMember]
		public virtual int? Piso { get;set; }

		[DataMember]
		public virtual string Descripcion { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual int? EdadConstruccion { get;set; }

		[DataMember]
		public virtual double? Superficie { get;set; }

		[DataMember]
		public virtual int? Conservacion { get;set; }

		[DataMember]
		public virtual string Observaciones { get;set; }

		[DataMember]
		public virtual double? SuperficieComun { get;set; }

		[DataMember]
		public virtual PredioBloqueDto BloqueNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto ConservacionNav { get;set; }

		[DataMember]
		public virtual IList<PredioConstruccionDto> ConstruccionesNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioBaseDto))]
	public partial class PredioFrenteDto : IDtoWithKey
	{
		public PredioFrenteDto()
		{
		}
		
		public PredioFrenteDto(int mId, int? mPredio, int? mFrente, double? mSuperficie, int? mEstado, PredioBaseDto mPrediosbase)
		{
			this.Id = mId;
			this.Predio = mPredio;
			this.Frente = mFrente;
			this.Superficie = mSuperficie;
			this.Estado = mEstado;
			this.PredioNav = mPrediosbase;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual int? Frente { get;set; }

		[DataMember]
		public virtual double? Superficie { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual PredioBaseDto PredioNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioBaseDto))]
	public partial class PredioFotoDto : IDtoWithKey
	{
		public PredioFotoDto()
		{
		}
		
		public PredioFotoDto(int mId, int? mPredio, int? mIndice, string mDescripcion, byte[] mFoto, int? mEstado, PredioBaseDto mPrediosbase)
		{
			this.Id = mId;
			this.Predio = mPredio;
			this.Indice = mIndice;
			this.Descripcion = mDescripcion;
			this.Foto = mFoto;
			this.Estado = mEstado;
			this.PredioNav = mPrediosbase;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual int? Indice { get;set; }

		[DataMember]
		public virtual string Descripcion { get;set; }

		[DataMember]
		public virtual byte[] Foto { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual PredioBaseDto PredioNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioPisoDto))]
	[KnownType(typeof(TablaClaveDto))]
	public partial class PredioConstruccionDto : IDtoWithKey
	{
		public PredioConstruccionDto()
		{
		}
		
		public PredioConstruccionDto(int mId, int? mPiso, int? mElemento, int? mEstado, string mClase, PredioPisoDto mPisoNav, TablaClaveDto mTablaclave)
		{
			this.Id = mId;
			this.Piso = mPiso;
			this.Elemento = mElemento;
			this.Estado = mEstado;
			this.Clase = mClase;
			this.PisoNav = mPisoNav;
			this.ConsElementoNav = mTablaclave;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Piso { get;set; }

		[DataMember]
		public virtual int? Elemento { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual string Clase { get;set; }

		[DataMember]
		public virtual PredioPisoDto PisoNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto ConsElementoNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioBaseDto))]
	[KnownType(typeof(PredioPisoDto))]
	public partial class PredioBloqueDto : IDtoWithKey
	{
		public PredioBloqueDto()
		{
		}
		
		public PredioBloqueDto(int mId, int? mPredio, int? mBloque, string mDescripcion, double? mAvaluo, PredioBaseDto mPrediosbase, IList<PredioPisoDto> mPrediospisos)
		{
			this.Id = mId;
			this.Predio = mPredio;
			this.Bloque = mBloque;
			this.Descripcion = mDescripcion;
			this.Avaluo = mAvaluo;
			this.PredioNav = mPrediosbase;
			this.PisosNav = mPrediospisos;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual int? Bloque { get;set; }

		[DataMember]
		public virtual string Descripcion { get;set; }

		[DataMember]
		public virtual double? Avaluo { get;set; }

		[DataMember]
		public virtual PredioBaseDto PredioNav { get;set; }

		[DataMember]
		public virtual IList<PredioPisoDto> PisosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(PredioTerrenoDto))]
	[KnownType(typeof(PredioTablaDto))]
	[KnownType(typeof(PredioPropietarioDto))]
	[KnownType(typeof(PredioFrenteDto))]
	[KnownType(typeof(PredioBloqueDto))]
	[KnownType(typeof(PredioFotoDto))]
	public partial class PredioBaseDto : IDtoWithKey
	{
		public PredioBaseDto()
		{
		}
		
		public PredioBaseDto(int mId, string mCodigo, int? mFormatocodigo, int? mModopropiedad, int? mTipopropiedad, bool? mEscritura, string mObservaciones, int? mDominio, string mDireccion, string mUbicacion, string mNombreinmueble, int? mViaaccesibilidad, int? mViamaterial, bool? mViaaceras, bool? mViaalcantarillado, bool? mViaalumbrado, int? mPredioagua, bool? mPredioelectricidad, int? mPredioalcantarillado, int? mEstado, double? mValorpropiedad, int? mRegistro, double? mAvaluoterreno, double? mAvaluoconstruccion, TablaClaveDto mViaMaterialNav, TablaClaveDto mDominioNav, TablaClaveDto mModoPropiedadNav, TablaClaveDto mTipoPropiedadNav, TablaClaveDto mPreAguaNav, TablaClaveDto mPreAlcantarilladoNav, IList<PredioTerrenoDto> mTerrenosNav, IList<PredioTablaDto> mTablasNav, IList<PredioPropietarioDto> mPropietariosNav, IList<PredioFrenteDto> mFrentesNav, IList<PredioBloqueDto> mBloquesNav, IList<PredioFotoDto> mFotosNav)
		{
			this.Id = mId;
			this.Codigo = mCodigo;
			this.FormatoCodigo = mFormatocodigo;
			this.ModoPropiedad = mModopropiedad;
			this.TipoPropiedad = mTipopropiedad;
			this.Escritura = mEscritura;
			this.Observaciones = mObservaciones;
			this.Dominio = mDominio;
			this.Direccion = mDireccion;
			this.Ubicacion = mUbicacion;
			this.NombreInmueble = mNombreinmueble;
			this.ViaAccesibilidad = mViaaccesibilidad;
			this.ViaMaterial = mViamaterial;
			this.ViaAceras = mViaaceras;
			this.ViaAlcantarillado = mViaalcantarillado;
			this.ViaAlumbrado = mViaalumbrado;
			this.PredioAgua = mPredioagua;
			this.PredioElectricidad = mPredioelectricidad;
			this.PredioAlcantarillado = mPredioalcantarillado;
			this.Estado = mEstado;
			this.ValorPropiedad = mValorpropiedad;
			this.Registro = mRegistro;
			this.AvaluoTerreno = mAvaluoterreno;
			this.AvaluoConstruccion = mAvaluoconstruccion;
			this.ViaMaterialNav = mViaMaterialNav;
			this.DominioNav = mDominioNav;
			this.ModoPropiedadNav = mModoPropiedadNav;
			this.TipoPropiedadNav = mTipoPropiedadNav;
			this.PreAguaNav = mPreAguaNav;
			this.PreAlcantarilladoNav = mPreAlcantarilladoNav;
			this.TerrenosNav = mTerrenosNav;
			this.TablasNav = mTablasNav;
			this.PropietariosNav = mPropietariosNav;
			this.FrentesNav = mFrentesNav;
			this.BloquesNav = mBloquesNav;
			this.FotosNav = mFotosNav;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? FormatoCodigo { get;set; }

		[DataMember]
		public virtual int? ModoPropiedad { get;set; }

		[DataMember]
		public virtual int? TipoPropiedad { get;set; }

		[DataMember]
		public virtual bool? Escritura { get;set; }

		[DataMember]
		public virtual string Observaciones { get;set; }

		[DataMember]
		public virtual int? Dominio { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual string Ubicacion { get;set; }

		[DataMember]
		public virtual string NombreInmueble { get;set; }

		[DataMember]
		public virtual int? ViaAccesibilidad { get;set; }

		[DataMember]
		public virtual int? ViaMaterial { get;set; }

		[DataMember]
		public virtual bool? ViaAceras { get;set; }

		[DataMember]
		public virtual bool? ViaAlcantarillado { get;set; }

		[DataMember]
		public virtual bool? ViaAlumbrado { get;set; }

		[DataMember]
		public virtual int? PredioAgua { get;set; }

		[DataMember]
		public virtual bool? PredioElectricidad { get;set; }

		[DataMember]
		public virtual int? PredioAlcantarillado { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? ValorPropiedad { get;set; }

		[DataMember]
		public virtual int? Registro { get;set; }

		[DataMember]
		public virtual double? AvaluoTerreno { get;set; }

		[DataMember]
		public virtual double? AvaluoConstruccion { get;set; }

		[DataMember]
		public virtual TablaClaveDto ViaMaterialNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto DominioNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto ModoPropiedadNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto TipoPropiedadNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto PreAguaNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto PreAlcantarilladoNav { get;set; }

		[DataMember]
		public virtual IList<PredioTerrenoDto> TerrenosNav { get;set; }

		[DataMember]
		public virtual IList<PredioTablaDto> TablasNav { get;set; }

		[DataMember]
		public virtual IList<PredioPropietarioDto> PropietariosNav { get;set; }

		[DataMember]
		public virtual IList<PredioFrenteDto> FrentesNav { get;set; }

		[DataMember]
		public virtual IList<PredioBloqueDto> BloquesNav { get;set; }

		[DataMember]
		public virtual IList<PredioFotoDto> FotosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ContribuyenteDto))]
	public partial class ServicioDto : IDtoWithKey
	{
		public ServicioDto()
		{
		}
		
		public ServicioDto(int mId, string mCodigo, string mDenominacion, int? mContribuyente, string mDireccion, string mSector, int? mCategoria, int? mEstado, int? mTipo, double? mLectura, DateTime? mFecha, ContribuyenteDto mContribuyenteNav)
		{
			this.Id = mId;
			this.Codigo = mCodigo;
			this.Denominacion = mDenominacion;
			this.Contribuyente = mContribuyente;
			this.Direccion = mDireccion;
			this.Sector = mSector;
			this.Categoria = mCategoria;
			this.Estado = mEstado;
			this.Tipo = mTipo;
			this.Lectura = mLectura;
			this.Fecha = mFecha;
			this.ContribuyenteNav = mContribuyenteNav;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual string Sector { get;set; }

		[DataMember]
		public virtual int? Categoria { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual double? Lectura { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual ContribuyenteDto ContribuyenteNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ContribuyenteDto))]
	[KnownType(typeof(PatentesComponenteDto))]
	public partial class PatenteDto : IDtoWithKey
	{
		public PatenteDto()
		{
		}
		
		public PatenteDto(int mId, string mCodigo, int? mContribuyente, string mNombrecomercial, string mObservaciones, int? mPredio, bool? mArtesano, bool? mContabilidadrequerida, string mDireccion, int? mEstado, ContribuyenteDto mContribuyenteNav, IList<PatentesComponenteDto> mComponentesNav)
		{
			this.Id = mId;
			this.Codigo = mCodigo;
			this.Contribuyente = mContribuyente;
			this.NombreComercial = mNombrecomercial;
			this.Observaciones = mObservaciones;
			this.Predio = mPredio;
			this.Artesano = mArtesano;
			this.ContabilidadRequerida = mContabilidadrequerida;
			this.Direccion = mDireccion;
			this.Estado = mEstado;
			this.ContribuyenteNav = mContribuyenteNav;
			this.ComponentesNav = mComponentesNav;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual string NombreComercial { get;set; }

		[DataMember]
		public virtual string Observaciones { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual bool? Artesano { get;set; }

		[DataMember]
		public virtual bool? ContabilidadRequerida { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual ContribuyenteDto ContribuyenteNav { get;set; }

		[DataMember]
		public virtual IList<PatentesComponenteDto> ComponentesNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ContribuyenteDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(CoeficienteElementoDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(AguaServicioDto))]
	public partial class AguaPotableDto : IDtoWithKey
	{
		public AguaPotableDto()
		{
		}
		
		public AguaPotableDto(int mId, string mCodigo, int? mContribuyente, int? mCategoria, int? mClasificacion, bool? mMedidorInstalado, string mMedidorcodigo, bool? mServicioadicional, bool? mServicioagregado, int? mUbicacionsector, int? mUbicacionzona, int? mUbicaciondivision, int? mServicioestado, int? mEstado, double? mMedidordiametro, int? mUbicacionpredio, int? mUbicacionmanzana, bool? mPromedioUsar, double? mPromedioindividual, string mPrediocodigo, int? mPredio, string mDireccion, int? mTipodominio, bool? mTanqueelevado, string mReservorio, bool? mPiscina, DateTime? mMedidorfecha, int? mFormapropiedad, string mDireccionbarrio, DateTime? mServicio2fecha, DateTime? mServicio1fecha, ContribuyenteDto mContribuyenteNav, TablaClaveDto mTablaclave, CoeficienteElementoDto mCoeficienteelemento, TablaClaveDto mTablaclave1, TablaClaveDto mTablaclave2, IList<AguaServicioDto> mAguaservicios)
		{
			this.Id = mId;
			this.Codigo = mCodigo;
			this.Contribuyente = mContribuyente;
			this.Categoria = mCategoria;
			this.Clasificacion = mClasificacion;
			this.MedidorInstalado = mMedidorInstalado;
			this.MedidorCodigo = mMedidorcodigo;
			this.ServicioAdicional = mServicioadicional;
			this.ServicioAgregado = mServicioagregado;
			this.UbicacionSector = mUbicacionsector;
			this.UbicacionZona = mUbicacionzona;
			this.UbicacionDivision = mUbicaciondivision;
			this.ServicioEstado = mServicioestado;
			this.Estado = mEstado;
			this.MedidorDiametro = mMedidordiametro;
			this.UbicacionPredio = mUbicacionpredio;
			this.UbicacionManzana = mUbicacionmanzana;
			this.PromedioUsar = mPromedioUsar;
			this.PromedioIndividual = mPromedioindividual;
			this.PredioCodigo = mPrediocodigo;
			this.Predio = mPredio;
			this.Direccion = mDireccion;
			this.TipoDominio = mTipodominio;
			this.TanqueElevado = mTanqueelevado;
			this.Reservorio = mReservorio;
			this.Piscina = mPiscina;
			this.MedidorFecha = mMedidorfecha;
			this.FormaPropiedad = mFormapropiedad;
			this.DireccionBarrio = mDireccionbarrio;
			this.Servicio2Fecha = mServicio2fecha;
			this.Servicio1Fecha = mServicio1fecha;
			this.ContribuyenteNav = mContribuyenteNav;
			this.EstadoServicioNav = mTablaclave;
			this.CategoriaNav = mCoeficienteelemento;
			this.FormaPropiedadNav = mTablaclave1;
			this.DominioNav = mTablaclave2;
			this.ServiciosNav = mAguaservicios;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual int? Categoria { get;set; }

		[DataMember]
		public virtual int? Clasificacion { get;set; }

		[DataMember]
		public virtual bool? MedidorInstalado { get;set; }

		[DataMember]
		public virtual string MedidorCodigo { get;set; }

		[DataMember]
		public virtual bool? ServicioAdicional { get;set; }

		[DataMember]
		public virtual bool? ServicioAgregado { get;set; }

		[DataMember]
		public virtual int? UbicacionSector { get;set; }

		[DataMember]
		public virtual int? UbicacionZona { get;set; }

		[DataMember]
		public virtual int? UbicacionDivision { get;set; }

		[DataMember]
		public virtual int? ServicioEstado { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? MedidorDiametro { get;set; }

		[DataMember]
		public virtual int? UbicacionPredio { get;set; }

		[DataMember]
		public virtual int? UbicacionManzana { get;set; }

		[DataMember]
		public virtual bool? PromedioUsar { get;set; }

		[DataMember]
		public virtual double? PromedioIndividual { get;set; }

		[DataMember]
		public virtual string PredioCodigo { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual int? TipoDominio { get;set; }

		[DataMember]
		public virtual bool? TanqueElevado { get;set; }

		[DataMember]
		public virtual string Reservorio { get;set; }

		[DataMember]
		public virtual bool? Piscina { get;set; }

		[DataMember]
		public virtual DateTime? MedidorFecha { get;set; }

		[DataMember]
		public virtual int? FormaPropiedad { get;set; }

		[DataMember]
		public virtual string DireccionBarrio { get;set; }

		[DataMember]
		public virtual DateTime? Servicio2Fecha { get;set; }

		[DataMember]
		public virtual DateTime? Servicio1Fecha { get;set; }

		[DataMember]
		public virtual ContribuyenteDto ContribuyenteNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto EstadoServicioNav { get;set; }

		[DataMember]
		public virtual CoeficienteElementoDto CategoriaNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto FormaPropiedadNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto DominioNav { get;set; }

		[DataMember]
		public virtual IList<AguaServicioDto> ServiciosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(AguaPotableDto))]
	public partial class AguaLecturaDto : IDtoWithKey
	{
		public AguaLecturaDto()
		{
		}
		
		public AguaLecturaDto(int mId, int? mCuenta, int? mAño, double? mMes1, double? mMes2, double? mMes3, double? mMes4, double? mMes5, double? mMes6, double? mMes7, double? mMes8, double? mMes9, double? mMes10, double? mMes11, double? mMes12, double? mEstado, AguaPotableDto mAguapotable)
		{
			this.Id = mId;
			this.Cuenta = mCuenta;
			this.Año = mAño;
			this.Mes1 = mMes1;
			this.Mes2 = mMes2;
			this.Mes3 = mMes3;
			this.Mes4 = mMes4;
			this.Mes5 = mMes5;
			this.Mes6 = mMes6;
			this.Mes7 = mMes7;
			this.Mes8 = mMes8;
			this.Mes9 = mMes9;
			this.Mes10 = mMes10;
			this.Mes11 = mMes11;
			this.Mes12 = mMes12;
			this.Estado = mEstado;
			this.CuentaAguaNav = mAguapotable;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Cuenta { get;set; }

		[DataMember]
		public virtual int? Año { get;set; }

		[DataMember]
		public virtual double? Mes1 { get;set; }

		[DataMember]
		public virtual double? Mes2 { get;set; }

		[DataMember]
		public virtual double? Mes3 { get;set; }

		[DataMember]
		public virtual double? Mes4 { get;set; }

		[DataMember]
		public virtual double? Mes5 { get;set; }

		[DataMember]
		public virtual double? Mes6 { get;set; }

		[DataMember]
		public virtual double? Mes7 { get;set; }

		[DataMember]
		public virtual double? Mes8 { get;set; }

		[DataMember]
		public virtual double? Mes9 { get;set; }

		[DataMember]
		public virtual double? Mes10 { get;set; }

		[DataMember]
		public virtual double? Mes11 { get;set; }

		[DataMember]
		public virtual double? Mes12 { get;set; }

		[DataMember]
		public virtual double? Estado { get;set; }

		[DataMember]
		public virtual AguaPotableDto CuentaAguaNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(CoeficienteDto))]
	[KnownType(typeof(CoeficienteElementoDto))]
	[KnownType(typeof(ConceptoDto))]
	public partial class PatentesComponenteDto : IDtoWithKey
	{
		public PatentesComponenteDto()
		{
		}
		
		public PatentesComponenteDto(int mId, int? mPatente, int? mConcepto, double? mBaseimponible, int? mCategoria, int? mCoeficientestipo, int? mEstado, bool? mHabtipo, bool? mHabindice, bool? mHabcategoria, bool? mHabbase, int? mCoeficientesindice, CoeficienteDto mCoeficienteNav, CoeficienteElementoDto mCoeficienteselemento, ConceptoDto mConceptoNav)
		{
			this.Id = mId;
			this.Patente = mPatente;
			this.Concepto = mConcepto;
			this.BaseImponible = mBaseimponible;
			this.Categoria = mCategoria;
			this.CoeficientesTipo = mCoeficientestipo;
			this.Estado = mEstado;
			this.HabTipo = mHabtipo;
			this.HabIndice = mHabindice;
			this.HabCategoria = mHabcategoria;
			this.HabBase = mHabbase;
			this.CoeficientesIndice = mCoeficientesindice;
			this.CoeficienteNav = mCoeficienteNav;
			this.CoeficienteEleNav = mCoeficienteselemento;
			this.ConceptoNav = mConceptoNav;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Patente { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual double? BaseImponible { get;set; }

		[DataMember]
		public virtual int? Categoria { get;set; }

		[DataMember]
		public virtual int? CoeficientesTipo { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual bool? HabTipo { get;set; }

		[DataMember]
		public virtual bool? HabIndice { get;set; }

		[DataMember]
		public virtual bool? HabCategoria { get;set; }

		[DataMember]
		public virtual bool? HabBase { get;set; }

		[DataMember]
		public virtual int? CoeficientesIndice { get;set; }

		[DataMember]
		public virtual CoeficienteDto CoeficienteNav { get;set; }

		[DataMember]
		public virtual CoeficienteElementoDto CoeficienteEleNav { get;set; }

		[DataMember]
		public virtual ConceptoDto ConceptoNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ConceptosRubroDto))]
	[KnownType(typeof(ConceptosEmisionDto))]
	public partial class ConceptoDto : IDtoWithKey
	{
		public ConceptoDto()
		{
		}
		
		public ConceptoDto(int mId, string mDenominacion, int? mPeriodo, int? mConsecutivo, int? mEstado, string mReportedefinicion, string mReportecomprobarte, int? mMenuemisiones, string mRecargoscodigos, string mRebajascodigos, bool? mPagosparciales, int? mConveniohabilitado, int? mValidar, IList<ConceptosRubroDto> mConceptosrubros, IList<ConceptosEmisionDto> mConceptosemisions)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Periodo = mPeriodo;
			this.Consecutivo = mConsecutivo;
			this.Estado = mEstado;
			this.ReporteDefinicion = mReportedefinicion;
			this.ReporteComprobarte = mReportecomprobarte;
			this.MenuEmisiones = mMenuemisiones;
			this.RecargosCodigos = mRecargoscodigos;
			this.RebajasCodigos = mRebajascodigos;
			this.PagosParciales = mPagosparciales;
			this.ConvenioHabilitado = mConveniohabilitado;
			this.Validar = mValidar;
			this.RubrosNav = mConceptosrubros;
			this.EmisionParametros = mConceptosemisions;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Periodo { get;set; }

		[DataMember]
		public virtual int? Consecutivo { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual string ReporteDefinicion { get;set; }

		[DataMember]
		public virtual string ReporteComprobarte { get;set; }

		[DataMember]
		public virtual int? MenuEmisiones { get;set; }

		[DataMember]
		public virtual string RecargosCodigos { get;set; }

		[DataMember]
		public virtual string RebajasCodigos { get;set; }

		[DataMember]
		public virtual bool? PagosParciales { get;set; }

		[DataMember]
		public virtual int? ConvenioHabilitado { get;set; }

		[DataMember]
		public virtual int? Validar { get;set; }

		[DataMember]
		public virtual IList<ConceptosRubroDto> RubrosNav { get;set; }

		[DataMember]
		public virtual IList<ConceptosEmisionDto> EmisionParametros { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(CoeficienteElementoDto))]
	public partial class CoeficienteDto : IDtoWithKey
	{
		public CoeficienteDto()
		{
		}
		
		public CoeficienteDto(int mId, int? mIndice, string mDenominacion, double? mValor, int? mEstado, IList<CoeficienteElementoDto> mCoeficienteselementos)
		{
			this.Id = mId;
			this.Indice = mIndice;
			this.Denominacion = mDenominacion;
			this.Valor = mValor;
			this.Estado = mEstado;
			this.ElementosNav = mCoeficienteselementos;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Indice { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual IList<CoeficienteElementoDto> ElementosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(CoeficienteDto))]
	public partial class CoeficienteElementoDto : IDtoWithKey
	{
		public CoeficienteElementoDto()
		{
		}
		
		public CoeficienteElementoDto(int mId, int? mCoeficiente, int? mClave, string mDenominacion, double? mValor, double? mValor1, double? mValor2, double? mValor3, double? mValor4, int? mEstado, int? mEnterodesde, int? mEnterohasta, double? mMontodesde, double? mMontohasta, CoeficienteDto mCoeficiente1)
		{
			this.Id = mId;
			this.Coeficiente = mCoeficiente;
			this.Clave = mClave;
			this.Denominacion = mDenominacion;
			this.Valor = mValor;
			this.Valor1 = mValor1;
			this.Valor2 = mValor2;
			this.Valor3 = mValor3;
			this.Valor4 = mValor4;
			this.Estado = mEstado;
			this.EnteroDesde = mEnterodesde;
			this.EnteroHasta = mEnterohasta;
			this.MontoDesde = mMontodesde;
			this.MontoHasta = mMontohasta;
			this.CoeficienteNav = mCoeficiente1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Coeficiente { get;set; }

		[DataMember]
		public virtual int? Clave { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual double? Valor1 { get;set; }

		[DataMember]
		public virtual double? Valor2 { get;set; }

		[DataMember]
		public virtual double? Valor3 { get;set; }

		[DataMember]
		public virtual double? Valor4 { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? EnteroDesde { get;set; }

		[DataMember]
		public virtual int? EnteroHasta { get;set; }

		[DataMember]
		public virtual double? MontoDesde { get;set; }

		[DataMember]
		public virtual double? MontoHasta { get;set; }

		[DataMember]
		public virtual CoeficienteDto CoeficienteNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(UsuarioDto))]
	public partial class SupervisionDto : IDtoWithKey
	{
		public SupervisionDto()
		{
		}
		
		public SupervisionDto(int mId, int? mUsuario, int? mModulo, int? mEstado, UsuarioDto mUsuario1)
		{
			this.Id = mId;
			this.Usuario = mUsuario;
			this.Modulo = mModulo;
			this.Estado = mEstado;
			this.UsuarioNav = mUsuario1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual int? Modulo { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual UsuarioDto UsuarioNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(FuncionDto))]
	[KnownType(typeof(UsuarioDto))]
	public partial class PrivilegioDto : IDtoWithKey
	{
		public PrivilegioDto()
		{
		}
		
		public PrivilegioDto(int mId, int? mUsuario, int? mFuncion, string mComandos, string mSupervisados, int? mEstado, FuncionDto mFuncione, UsuarioDto mUsuario1)
		{
			this.Id = mId;
			this.Usuario = mUsuario;
			this.Funcion = mFuncion;
			this.Comandos = mComandos;
			this.Supervisados = mSupervisados;
			this.Estado = mEstado;
			this.FuncionNav = mFuncione;
			this.UsuarioNav = mUsuario1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual int? Funcion { get;set; }

		[DataMember]
		public virtual string Comandos { get;set; }

		[DataMember]
		public virtual string Supervisados { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual FuncionDto FuncionNav { get;set; }

		[DataMember]
		public virtual UsuarioDto UsuarioNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(AutorizacionDto))]
	[KnownType(typeof(PrivilegioDto))]
	public partial class UsuarioDto : IDtoWithKey
	{
		public UsuarioDto()
		{
		}
		
		public UsuarioDto(int mId, string mCodigo, string mNombres, string mClave, bool mCaduca, DateTime? mCaducafecha, int mEstado, IList<AutorizacionDto> mAutorizaciones, IList<PrivilegioDto> mUsuariosprivilegios)
		{
			this.Id = mId;
			this.Codigo = mCodigo;
			this.Nombres = mNombres;
			this.Clave = mClave;
			this.Caduca = mCaduca;
			this.CaducaFecha = mCaducafecha;
			this.Estado = mEstado;
			this.Autorizaciones = mAutorizaciones;
			this.UsuariosPrivilegios = mUsuariosprivilegios;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual string Clave { get;set; }

		[DataMember]
		public virtual bool Caduca { get;set; }

		[DataMember]
		public virtual DateTime? CaducaFecha { get;set; }

		[DataMember]
		public virtual int Estado { get;set; }

		[DataMember]
		public virtual IList<AutorizacionDto> Autorizaciones { get;set; }

		[DataMember]
		public virtual IList<PrivilegioDto> UsuariosPrivilegios { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(FuncionDto))]
	public partial class ComandoDto : IDtoWithKey
	{
		public ComandoDto()
		{
		}
		
		public ComandoDto(int mId, int? mFuncion, int? mIndice, string mDenominacion, int? mEstado, FuncionDto mFuncione)
		{
			this.Id = mId;
			this.Funcion = mFuncion;
			this.Indice = mIndice;
			this.Denominacion = mDenominacion;
			this.Estado = mEstado;
			this.FuncionNav = mFuncione;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Funcion { get;set; }

		[DataMember]
		public virtual int? Indice { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual FuncionDto FuncionNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ModuloDto))]
	[KnownType(typeof(ComandoDto))]
	public partial class FuncionDto : IDtoWithKey
	{
		public FuncionDto()
		{
		}
		
		public FuncionDto(int mId, string mDenominacion, int? mGrupo, int? mModulo, int? mEstado, ModuloDto mModulo1, IList<ComandoDto> mFuncionescomandos)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Grupo = mGrupo;
			this.Modulo = mModulo;
			this.Estado = mEstado;
			this.Modulo1 = mModulo1;
			this.ComandosNav = mFuncionescomandos;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Grupo { get;set; }

		[DataMember]
		public virtual int? Modulo { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual ModuloDto Modulo1 { get;set; }

		[DataMember]
		public virtual IList<ComandoDto> ComandosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(FuncionDto))]
	[KnownType(typeof(UsuarioDto))]
	public partial class AutorizacionDto : IDtoWithKey
	{
		public AutorizacionDto()
		{
		}
		
		public AutorizacionDto(int mId, int? mUsuario, int? mFuncion, int? mComando, DateTime? mFechaemision, DateTime? mFechaejecucion, int? mSupervisor, int? mEstado, FuncionDto mFuncione, UsuarioDto mUsuario1)
		{
			this.Id = mId;
			this.Usuario = mUsuario;
			this.Funcion = mFuncion;
			this.Comando = mComando;
			this.FechaEmision = mFechaemision;
			this.FechaEjecucion = mFechaejecucion;
			this.Supervisor = mSupervisor;
			this.Estado = mEstado;
			this.FuncionNav = mFuncione;
			this.UsuarioNav = mUsuario1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual int? Funcion { get;set; }

		[DataMember]
		public virtual int? Comando { get;set; }

		[DataMember]
		public virtual DateTime? FechaEmision { get;set; }

		[DataMember]
		public virtual DateTime? FechaEjecucion { get;set; }

		[DataMember]
		public virtual int? Supervisor { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual FuncionDto FuncionNav { get;set; }

		[DataMember]
		public virtual UsuarioDto UsuarioNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class ModuloUsuarioDto : IDtoWithKey
	{
		public ModuloUsuarioDto()
		{
		}
		
		public ModuloUsuarioDto(int? mUsuario, int mModulo, string mBoton, int? mEstado)
		{
			this.Usuario = mUsuario;
			this.Modulo = mModulo;
			this.Boton = mBoton;
			this.Estado = mEstado;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual int Modulo { get;set; }

		[DataMember]
		public virtual string Boton { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(UsuarioDto))]
	public partial class SeguimientoDto : IDtoWithKey
	{
		public SeguimientoDto()
		{
		}
		
		public SeguimientoDto(int mId, DateTime? mFecha, int? mUsuario, string mCliente, string mDireccion, string mOriginal, string mComentario, int? mEstado, int? mEntidad, string mInterfazred, UsuarioDto mUsuario1)
		{
			this.Id = mId;
			this.Fecha = mFecha;
			this.Usuario = mUsuario;
			this.Cliente = mCliente;
			this.Direccion = mDireccion;
			this.Original = mOriginal;
			this.Comentario = mComentario;
			this.Estado = mEstado;
			this.Entidad = mEntidad;
			this.InterfazRed = mInterfazred;
			this.UsuarioNav = mUsuario1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual string Cliente { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual string Original { get;set; }

		[DataMember]
		public virtual string Comentario { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Entidad { get;set; }

		[DataMember]
		public virtual string InterfazRed { get;set; }

		[DataMember]
		public virtual UsuarioDto UsuarioNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(RubroDto))]
	public partial class RubrosParametroDto : IDtoWithKey
	{
		public RubrosParametroDto()
		{
		}
		
		public RubrosParametroDto(int mId, int? mRubro, int? mOrigen, int? mTipo, int? mCatastro, string mCampo, RubroDto mRubro1)
		{
			this.Id = mId;
			this.Rubro = mRubro;
			this.Origen = mOrigen;
			this.Tipo = mTipo;
			this.Catastro = mCatastro;
			this.Campo = mCampo;
			this.RubroNav = mRubro1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Rubro { get;set; }

		[DataMember]
		public virtual int? Origen { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual int? Catastro { get;set; }

		[DataMember]
		public virtual string Campo { get;set; }

		[DataMember]
		public virtual RubroDto RubroNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(RubroDto))]
	[KnownType(typeof(ConceptoDto))]
	public partial class ConceptosRubroDto : IDtoWithKey
	{
		public ConceptosRubroDto()
		{
		}
		
		public ConceptosRubroDto(int mId, int? mConcepto, int? mRubro, int? mIndice, int? mEstado, RubroDto mRubro1, ConceptoDto mConcepto1)
		{
			this.Id = mId;
			this.Concepto = mConcepto;
			this.Rubro = mRubro;
			this.Indice = mIndice;
			this.Estado = mEstado;
			this.RubroNav = mRubro1;
			this.ConceptoNav = mConcepto1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual int? Rubro { get;set; }

		[DataMember]
		public virtual int? Indice { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual RubroDto RubroNav { get;set; }

		[DataMember]
		public virtual ConceptoDto ConceptoNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ConceptoDto))]
	public partial class ConceptosDocumentoDto : IDtoWithKey
	{
		public ConceptosDocumentoDto()
		{
		}
		
		public ConceptosDocumentoDto(int mId, int? mConcepto, int? mNumero, string mReporte, string mDefinicion, int? mEstado, int? mModulo, string mDescripcion, int? mReporteid, ConceptoDto mConcepto1)
		{
			this.Id = mId;
			this.Concepto = mConcepto;
			this.Numero = mNumero;
			this.Reporte = mReporte;
			this.Definicion = mDefinicion;
			this.Estado = mEstado;
			this.Modulo = mModulo;
			this.Descripcion = mDescripcion;
			this.Reporteid = mReporteid;
			this.ConceptoNav = mConcepto1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual int? Numero { get;set; }

		[DataMember]
		public virtual string Reporte { get;set; }

		[DataMember]
		public virtual string Definicion { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Modulo { get;set; }

		[DataMember]
		public virtual string Descripcion { get;set; }

		[DataMember]
		public virtual int? Reporteid { get;set; }

		[DataMember]
		public virtual ConceptoDto ConceptoNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(TablaClaveDto))]
	[KnownType(typeof(AguaPotableDto))]
	[KnownType(typeof(ConceptoDto))]
	public partial class AguaServicioDto : IDtoWithKey
	{
		public AguaServicioDto()
		{
		}
		
		public AguaServicioDto(int mId, int? mCuenta, int? mConcepto, DateTime? mFechainicio, int? mEstado, TablaClaveDto mTablaclave, AguaPotableDto mAguapotable, ConceptoDto mConcepto1)
		{
			this.Id = mId;
			this.Cuenta = mCuenta;
			this.Concepto = mConcepto;
			this.FechaInicio = mFechainicio;
			this.Estado = mEstado;
			this.EstadoNav = mTablaclave;
			this.CuentaNav = mAguapotable;
			this.ConceptoNav = mConcepto1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Cuenta { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual DateTime? FechaInicio { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual TablaClaveDto EstadoNav { get;set; }

		[DataMember]
		public virtual AguaPotableDto CuentaNav { get;set; }

		[DataMember]
		public virtual ConceptoDto ConceptoNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PlanillaDto))]
	[KnownType(typeof(PlanillaDto))]
	[KnownType(typeof(UsuarioDto))]
	public partial class PlanillaSustitucionDto : IDtoWithKey
	{
		public PlanillaSustitucionDto()
		{
		}
		
		public PlanillaSustitucionDto(int mId, DateTime? mFecha, int? mOriginal, int? mNueva, string mComentarios, int? mUsuario, PlanillaDto mPlanilla, PlanillaDto mPlanilla1, UsuarioDto mUsuario1)
		{
			this.Id = mId;
			this.Fecha = mFecha;
			this.Original = mOriginal;
			this.Nueva = mNueva;
			this.Comentarios = mComentarios;
			this.Usuario = mUsuario;
			this.PlanillaNav = mPlanilla;
			this.PlanillaNavi = mPlanilla1;
			this.UsuarioNav = mUsuario1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Original { get;set; }

		[DataMember]
		public virtual int? Nueva { get;set; }

		[DataMember]
		public virtual string Comentarios { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual PlanillaDto PlanillaNav { get;set; }

		[DataMember]
		public virtual PlanillaDto PlanillaNavi { get;set; }

		[DataMember]
		public virtual UsuarioDto UsuarioNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(RubroDto))]
	public partial class PlanillaRubroDto : IDtoWithKey
	{
		public PlanillaRubroDto()
		{
		}
		
		public PlanillaRubroDto(int mId, int? mPlanilla, int? mRubro, int? mOrigen, double? mValor, int? mReferencia, int? mEstado, double? mRebajas, double? mPagos, RubroDto mRubro1)
		{
			this.Id = mId;
			this.Planilla = mPlanilla;
			this.Rubro = mRubro;
			this.Origen = mOrigen;
			this.Valor = mValor;
			this.Referencia = mReferencia;
			this.Estado = mEstado;
			this.Rebajas = mRebajas;
			this.Pagos = mPagos;
			this.RubroNav = mRubro1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Planilla { get;set; }

		[DataMember]
		public virtual int? Rubro { get;set; }

		[DataMember]
		public virtual int? Origen { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Referencia { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? Rebajas { get;set; }

		[DataMember]
		public virtual double? Pagos { get;set; }

		[DataMember]
		public virtual RubroDto RubroNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class PlanillaAtributoDto : IDtoWithKey
	{
		public PlanillaAtributoDto()
		{
		}
		
		public PlanillaAtributoDto(int mId, string mDenominacion, int? mPlanilla, int? mAtributo, int? mTipo, int? mValori, double? mValord, string mValorc, DateTime? mValorf, string mValorb, int? mEstado)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Planilla = mPlanilla;
			this.Atributo = mAtributo;
			this.Tipo = mTipo;
			this.ValorI = mValori;
			this.ValorD = mValord;
			this.ValorC = mValorc;
			this.ValorF = mValorf;
			this.ValorB = mValorb;
			this.Estado = mEstado;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Planilla { get;set; }

		[DataMember]
		public virtual int? Atributo { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual int? ValorI { get;set; }

		[DataMember]
		public virtual double? ValorD { get;set; }

		[DataMember]
		public virtual string ValorC { get;set; }

		[DataMember]
		public virtual DateTime? ValorF { get;set; }

		[DataMember]
		public virtual string ValorB { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ContribuyenteDto))]
	[KnownType(typeof(ConceptoDto))]
	[KnownType(typeof(PlanillaRubroDto))]
	[KnownType(typeof(PlanillaAtributoDto))]
	public partial class PlanillaDto : IDtoWithKey
	{
		public PlanillaDto()
		{
		}
		
		public PlanillaDto(int mId, int? mConcepto, string mCodigo, int? mAño, int? mMes, int? mContribuyente, int? mServicio, double? mTotal, double? mPagos, double? mRecargos, double? mRebajas, double? mConvenios, DateTime? mFechaemision, DateTime? mFechacancelacion, int? mUsuario, string mComentarios, int? mNumero, int? mEspecie, int? mEstado, string mContribuyentes, int? mSoportenumero, ContribuyenteDto mContribuyente1, ConceptoDto mConcepto1, IList<PlanillaRubroDto> mPlanillasrubros, IList<PlanillaAtributoDto> mPlanillasatributos)
		{
			this.Id = mId;
			this.Concepto = mConcepto;
			this.Codigo = mCodigo;
			this.Año = mAño;
			this.Mes = mMes;
			this.Contribuyente = mContribuyente;
			this.Servicio = mServicio;
			this.Total = mTotal;
			this.Pagos = mPagos;
			this.Recargos = mRecargos;
			this.Rebajas = mRebajas;
			this.Convenios = mConvenios;
			this.FechaEmision = mFechaemision;
			this.FechaCancelacion = mFechacancelacion;
			this.Usuario = mUsuario;
			this.Comentarios = mComentarios;
			this.Numero = mNumero;
			this.Especie = mEspecie;
			this.Estado = mEstado;
			this.Contribuyentes = mContribuyentes;
			this.SoporteNumero = mSoportenumero;
			this.ContribuyenteNav = mContribuyente1;
			this.ConceptoNav = mConcepto1;
			this.RubrosNav = mPlanillasrubros;
			this.AtributosNav = mPlanillasatributos;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? Año { get;set; }

		[DataMember]
		public virtual int? Mes { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual int? Servicio { get;set; }

		[DataMember]
		public virtual double? Total { get;set; }

		[DataMember]
		public virtual double? Pagos { get;set; }

		[DataMember]
		public virtual double? Recargos { get;set; }

		[DataMember]
		public virtual double? Rebajas { get;set; }

		[DataMember]
		public virtual double? Convenios { get;set; }

		[DataMember]
		public virtual DateTime? FechaEmision { get;set; }

		[DataMember]
		public virtual DateTime? FechaCancelacion { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual string Comentarios { get;set; }

		[DataMember]
		public virtual int? Numero { get;set; }

		[DataMember]
		public virtual int? Especie { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual string Contribuyentes { get;set; }

		[DataMember]
		public virtual int? SoporteNumero { get;set; }

		[DataMember]
		public virtual ContribuyenteDto ContribuyenteNav { get;set; }

		[DataMember]
		public virtual ConceptoDto ConceptoNav { get;set; }

		[DataMember]
		public virtual IList<PlanillaRubroDto> RubrosNav { get;set; }

		[DataMember]
		public virtual IList<PlanillaAtributoDto> AtributosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PlanillaDto))]
	public partial class ConvenioTransaccionDto : IDtoWithKey
	{
		public ConvenioTransaccionDto()
		{
		}
		
		public ConvenioTransaccionDto(int mId, int? mConvenio, int? mPlanilla, double? mValor, int? mEstado, int? mTransaccion, PlanillaDto mPlanilla1)
		{
			this.Id = mId;
			this.Convenio = mConvenio;
			this.Planilla = mPlanilla;
			this.Valor = mValor;
			this.Estado = mEstado;
			this.Transaccion = mTransaccion;
			this.PlanillaNav = mPlanilla1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Convenio { get;set; }

		[DataMember]
		public virtual int? Planilla { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Transaccion { get;set; }

		[DataMember]
		public virtual PlanillaDto PlanillaNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ContribuyenteDto))]
	[KnownType(typeof(ConvenioTransaccionDto))]
	[KnownType(typeof(ConveniosDividendoDto))]
	public partial class ConvenioDto : IDtoWithKey
	{
		public ConvenioDto()
		{
		}
		
		public ConvenioDto(int mId, int? mContribuyente, int? mConcepto, double? mValor, int? mDividendos, int? mEmisiones, DateTime? mFecharegistro, DateTime? mFechaterminacion, DateTime? mFechaemision, double? mPagos, int? mTipo, int? mEstado, int? mNumero, ContribuyenteDto mContribuyente1, IList<ConvenioTransaccionDto> mConveniostransacciones, IList<ConveniosDividendoDto> mConveniosdividendos)
		{
			this.Id = mId;
			this.Contribuyente = mContribuyente;
			this.Concepto = mConcepto;
			this.Valor = mValor;
			this.Dividendos = mDividendos;
			this.Emisiones = mEmisiones;
			this.FechaRegistro = mFecharegistro;
			this.FechaTerminacion = mFechaterminacion;
			this.FechaEmision = mFechaemision;
			this.Pagos = mPagos;
			this.Tipo = mTipo;
			this.Estado = mEstado;
			this.Numero = mNumero;
			this.ContribuyenteNav = mContribuyente1;
			this.TransaccionesNav = mConveniostransacciones;
			this.DividendosNav = mConveniosdividendos;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Dividendos { get;set; }

		[DataMember]
		public virtual int? Emisiones { get;set; }

		[DataMember]
		public virtual DateTime? FechaRegistro { get;set; }

		[DataMember]
		public virtual DateTime? FechaTerminacion { get;set; }

		[DataMember]
		public virtual DateTime? FechaEmision { get;set; }

		[DataMember]
		public virtual double? Pagos { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Numero { get;set; }

		[DataMember]
		public virtual ContribuyenteDto ContribuyenteNav { get;set; }

		[DataMember]
		public virtual IList<ConvenioTransaccionDto> TransaccionesNav { get;set; }

		[DataMember]
		public virtual IList<ConveniosDividendoDto> DividendosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class CobroTransaccionDto : IDtoWithKey
	{
		public CobroTransaccionDto()
		{
		}
		
		public CobroTransaccionDto(int mId, int? mCobro, int? mTransaccion, double? mValor, int? mEstado, double? mRecargos, double? mRebajas, int? mSoportenumero)
		{
			this.Id = mId;
			this.Cobro = mCobro;
			this.Transaccion = mTransaccion;
			this.Valor = mValor;
			this.Estado = mEstado;
			this.Recargos = mRecargos;
			this.Rebajas = mRebajas;
			this.SoporteNumero = mSoportenumero;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Cobro { get;set; }

		[DataMember]
		public virtual int? Transaccion { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? Recargos { get;set; }

		[DataMember]
		public virtual double? Rebajas { get;set; }

		[DataMember]
		public virtual int? SoporteNumero { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ContribuyenteDto))]
	[KnownType(typeof(CobroTransaccionDto))]
	[KnownType(typeof(CobrosElementoDto))]
	[KnownType(typeof(CobrosRubroDto))]
	public partial class CobroDto : IDtoWithKey
	{
		public CobroDto()
		{
		}
		
		public CobroDto(int mId, int? mContribuyente, DateTime? mFecha, int? mFormapago, string mFormapagoatributos, int? mUsuario, int? mEstado, double? mValor, ContribuyenteDto mContribuyente1, IList<CobroTransaccionDto> mCobrostransacciones, IList<CobrosElementoDto> mCobroselementos, IList<CobrosRubroDto> mCobrosrubros)
		{
			this.Id = mId;
			this.Contribuyente = mContribuyente;
			this.Fecha = mFecha;
			this.FormaPago = mFormapago;
			this.FormaPagoAtributos = mFormapagoatributos;
			this.Usuario = mUsuario;
			this.Estado = mEstado;
			this.Valor = mValor;
			this.ContribuyenteNav = mContribuyente1;
			this.TransaccionesNav = mCobrostransacciones;
			this.ElementosNav = mCobroselementos;
			this.RubrosNav = mCobrosrubros;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? FormaPago { get;set; }

		[DataMember]
		public virtual string FormaPagoAtributos { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual ContribuyenteDto ContribuyenteNav { get;set; }

		[DataMember]
		public virtual IList<CobroTransaccionDto> TransaccionesNav { get;set; }

		[DataMember]
		public virtual IList<CobrosElementoDto> ElementosNav { get;set; }

		[DataMember]
		public virtual IList<CobrosRubroDto> RubrosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class CobrosElementoDto : IDtoWithKey
	{
		public CobrosElementoDto()
		{
		}
		
		public CobrosElementoDto(int mId, int? mCobro, int? mFormapago, DateTime? mFecha, int? mNumero, int? mEntidad, string mNombres, string mDenominacion, string mCodigo, int? mTipo, int? mAutorizacion, string mComentario, double? mValor, int? mEstado)
		{
			this.Id = mId;
			this.Cobro = mCobro;
			this.FormaPago = mFormapago;
			this.Fecha = mFecha;
			this.Numero = mNumero;
			this.Entidad = mEntidad;
			this.Nombres = mNombres;
			this.Denominacion = mDenominacion;
			this.Codigo = mCodigo;
			this.Tipo = mTipo;
			this.Autorizacion = mAutorizacion;
			this.Comentario = mComentario;
			this.Valor = mValor;
			this.Estado = mEstado;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Cobro { get;set; }

		[DataMember]
		public virtual int? FormaPago { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Numero { get;set; }

		[DataMember]
		public virtual int? Entidad { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual int? Autorizacion { get;set; }

		[DataMember]
		public virtual string Comentario { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(RubroDto))]
	public partial class CobrosRubroDto : IDtoWithKey
	{
		public CobrosRubroDto()
		{
		}
		
		public CobrosRubroDto(int mId, int? mCobro, int? mRubro, int? mOrigen, double? mValor, int? mReferencia, int? mEstado, double? mRebajas, RubroDto mRubro1)
		{
			this.Id = mId;
			this.Cobro = mCobro;
			this.Rubro = mRubro;
			this.Origen = mOrigen;
			this.Valor = mValor;
			this.Referencia = mReferencia;
			this.Estado = mEstado;
			this.Rebajas = mRebajas;
			this.RubroNav = mRubro1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Cobro { get;set; }

		[DataMember]
		public virtual int? Rubro { get;set; }

		[DataMember]
		public virtual int? Origen { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Referencia { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual double? Rebajas { get;set; }

		[DataMember]
		public virtual RubroDto RubroNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class RepRecaudacionesFechaDto : IDtoWithKey
	{
		public RepRecaudacionesFechaDto()
		{
		}
		
		public RepRecaudacionesFechaDto(double? mTotal, double? mRecargos, double? mRebajas, double? mPagos, int? mNumero, DateTime? mFecha, int? mConcepto, string mCodigo, int? mAño, int mId, string mNombres, string mConceptoden, int? mSoportenumero, int? mEstado)
		{
			this.Total = mTotal;
			this.Recargos = mRecargos;
			this.Rebajas = mRebajas;
			this.Pagos = mPagos;
			this.Numero = mNumero;
			this.Fecha = mFecha;
			this.Concepto = mConcepto;
			this.Codigo = mCodigo;
			this.Año = mAño;
			this.Id = mId;
			this.Nombres = mNombres;
			this.Conceptoden = mConceptoden;
			this.SoporteNumero = mSoportenumero;
			this.Estado = mEstado;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual double? Total { get;set; }

		[DataMember]
		public virtual double? Recargos { get;set; }

		[DataMember]
		public virtual double? Rebajas { get;set; }

		[DataMember]
		public virtual double? Pagos { get;set; }

		[DataMember]
		public virtual int? Numero { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? Año { get;set; }

		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual string Conceptoden { get;set; }

		[DataMember]
		public virtual int? SoporteNumero { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class RepEmisionesSaldoDto : IDtoWithKey
	{
		public RepEmisionesSaldoDto()
		{
		}
		
		public RepEmisionesSaldoDto(double? mValor, int? mConteo, int? mAño, string mEstadoden, string mDenominacion, int mId, int? mConcepto)
		{
			this.Valor = mValor;
			this.Conteo = mConteo;
			this.Año = mAño;
			this.Estadoden = mEstadoden;
			this.Denominacion = mDenominacion;
			this.Id = mId;
			this.Concepto = mConcepto;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Conteo { get;set; }

		[DataMember]
		public virtual int? Año { get;set; }

		[DataMember]
		public virtual string Estadoden { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class ConceptosEmisionDto : IDtoWithKey
	{
		public ConceptosEmisionDto()
		{
		}
		
		public ConceptosEmisionDto(int mId, int? mConcepto, string mDescripcion, int? mOrigen, int? mOrigentipo, int? mOrigenclave, int? mReferencia, int? mEstado, int? mEmite, int? mCalcula, int? mPeriodico, int? mIndice, int? mTipodato, int? mValidar)
		{
			this.Id = mId;
			this.Concepto = mConcepto;
			this.Descripcion = mDescripcion;
			this.Origen = mOrigen;
			this.OrigenTipo = mOrigentipo;
			this.OrigenClave = mOrigenclave;
			this.Referencia = mReferencia;
			this.Estado = mEstado;
			this.Emite = mEmite;
			this.Calcula = mCalcula;
			this.Periodico = mPeriodico;
			this.Indice = mIndice;
			this.TipoDato = mTipodato;
			this.Validar = mValidar;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual string Descripcion { get;set; }

		[DataMember]
		public virtual int? Origen { get;set; }

		[DataMember]
		public virtual int? OrigenTipo { get;set; }

		[DataMember]
		public virtual int? OrigenClave { get;set; }

		[DataMember]
		public virtual int? Referencia { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Emite { get;set; }

		[DataMember]
		public virtual int? Calcula { get;set; }

		[DataMember]
		public virtual int? Periodico { get;set; }

		[DataMember]
		public virtual int? Indice { get;set; }

		[DataMember]
		public virtual int? TipoDato { get;set; }

		[DataMember]
		public virtual int? Validar { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(FuncionDto))]
	public partial class ModuloDto : IDtoWithKey
	{
		public ModuloDto()
		{
		}
		
		public ModuloDto(int mId, string mDenominacion, int? mEstado, string mBoton, IList<FuncionDto> mFuncions)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Estado = mEstado;
			this.Boton = mBoton;
			this.Funcions = mFuncions;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual string Boton { get;set; }

		[DataMember]
		public virtual IList<FuncionDto> Funcions { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(ModuloDto))]
	public partial class ReporteDto : IDtoWithKey
	{
		public ReporteDto()
		{
		}
		
		public ReporteDto(int mId, string mDenominacion, int? mModulo, string mDefinicion, int? mEstado, ModuloDto mModulo1)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Modulo = mModulo;
			this.Definicion = mDefinicion;
			this.Estado = mEstado;
			this.ModuloNav = mModulo1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Modulo { get;set; }

		[DataMember]
		public virtual string Definicion { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual ModuloDto ModuloNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class RepCuentaCorrienteResumenDto : IDtoWithKey
	{
		public RepCuentaCorrienteResumenDto()
		{
		}
		
		public RepCuentaCorrienteResumenDto(double? mDeuda, string mContribuyentes, int? mConteo, string mNombres)
		{
			this.Deuda = mDeuda;
			this.Contribuyentes = mContribuyentes;
			this.Conteo = mConteo;
			this.Nombres = mNombres;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual double? Deuda { get;set; }

		[DataMember]
		public virtual string Contribuyentes { get;set; }

		[DataMember]
		public virtual int? Conteo { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class RepCuentaCorrienteDetalleDto : IDtoWithKey
	{
		public RepCuentaCorrienteDetalleDto()
		{
		}
		
		public RepCuentaCorrienteDetalleDto(double? mTotal, string mNombres, string mDireccion, int? mConcepto, string mCodigo, int? mAño, int mId)
		{
			this.Total = mTotal;
			this.Nombres = mNombres;
			this.Direccion = mDireccion;
			this.Concepto = mConcepto;
			this.Codigo = mCodigo;
			this.Año = mAño;
			this.Id = mId;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual double? Total { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? Año { get;set; }

		[DataMember]
		public virtual int Id { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class CajaDto : IDtoWithKey
	{
		public CajaDto()
		{
		}
		
		public CajaDto(int mId, string mCodigo, string mDescripcion, DateTime? mCierre, double? mSaldo, int? mEstado)
		{
			this.Id = mId;
			this.Codigo = mCodigo;
			this.Descripcion = mDescripcion;
			this.Cierre = mCierre;
			this.Saldo = mSaldo;
			this.Estado = mEstado;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual string Descripcion { get;set; }

		[DataMember]
		public virtual DateTime? Cierre { get;set; }

		[DataMember]
		public virtual double? Saldo { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(UsuarioDto))]
	[KnownType(typeof(CajaDto))]
	public partial class CajasUsuarioDto : IDtoWithKey
	{
		public CajasUsuarioDto()
		{
		}
		
		public CajasUsuarioDto(int mId, int? mCaja, int? mUsuario, int? mEstado, UsuarioDto mUsuario1, CajaDto mCaja1)
		{
			this.Id = mId;
			this.Caja = mCaja;
			this.Usuario = mUsuario;
			this.Estado = mEstado;
			this.UsuarioNav = mUsuario1;
			this.CajaNav = mCaja1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Caja { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual UsuarioDto UsuarioNav { get;set; }

		[DataMember]
		public virtual CajaDto CajaNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class RepPredioDto : IDtoWithKey
	{
		public RepPredioDto()
		{
		}
		
		public RepPredioDto(int? mZonahomogenea, double? mValorpropiedad, int? mTipopropiedad, double? mSuperficie, string mNombres, int mId, bool? mEscritura, int? mDominio, string mDireccion, bool? mConstruido, string mCodigo, int? mClasetierra, double? mAvaluoterreno, double? mAvaluoconstruccion, int? mZona, int? mSector, int? mPredio, int? mPoligono, int? mManzana, int? mFormatocodigo, string mDivision, int? mEstado, string mCedula, double? mAreaconstruccion)
		{
			this.ZonaHomogenea = mZonahomogenea;
			this.ValorPropiedad = mValorpropiedad;
			this.TipoPropiedad = mTipopropiedad;
			this.Superficie = mSuperficie;
			this.Nombres = mNombres;
			this.Id = mId;
			this.Escritura = mEscritura;
			this.Dominio = mDominio;
			this.Direccion = mDireccion;
			this.Construido = mConstruido;
			this.Codigo = mCodigo;
			this.ClaseTierra = mClasetierra;
			this.AvaluoTerreno = mAvaluoterreno;
			this.AvaluoConstruccion = mAvaluoconstruccion;
			this.Zona = mZona;
			this.Sector = mSector;
			this.Predio = mPredio;
			this.Poligono = mPoligono;
			this.Manzana = mManzana;
			this.FormatoCodigo = mFormatocodigo;
			this.Division = mDivision;
			this.Estado = mEstado;
			this.Cedula = mCedula;
			this.AreaConstruccion = mAreaconstruccion;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int? ZonaHomogenea { get;set; }

		[DataMember]
		public virtual double? ValorPropiedad { get;set; }

		[DataMember]
		public virtual int? TipoPropiedad { get;set; }

		[DataMember]
		public virtual double? Superficie { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual bool? Escritura { get;set; }

		[DataMember]
		public virtual int? Dominio { get;set; }

		[DataMember]
		public virtual string Direccion { get;set; }

		[DataMember]
		public virtual bool? Construido { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? ClaseTierra { get;set; }

		[DataMember]
		public virtual double? AvaluoTerreno { get;set; }

		[DataMember]
		public virtual double? AvaluoConstruccion { get;set; }

		[DataMember]
		public virtual int? Zona { get;set; }

		[DataMember]
		public virtual int? Sector { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual int? Poligono { get;set; }

		[DataMember]
		public virtual int? Manzana { get;set; }

		[DataMember]
		public virtual int? FormatoCodigo { get;set; }

		[DataMember]
		public virtual string Division { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual string Cedula { get;set; }

		[DataMember]
		public virtual double? AreaConstruccion { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(TablaClaveDto))]
	public partial class CuentaBancariaDto : IDtoWithKey
	{
		public CuentaBancariaDto()
		{
		}
		
		public CuentaBancariaDto(int mId, string mCodigo, string mNumerocuenta, int? mBanco, int? mTipo, string mAgente, int? mEstado, TablaClaveDto mTablaclave)
		{
			this.Id = mId;
			this.Codigo = mCodigo;
			this.NumeroCuenta = mNumerocuenta;
			this.Banco = mBanco;
			this.Tipo = mTipo;
			this.Agente = mAgente;
			this.Estado = mEstado;
			this.Tablaclave = mTablaclave;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual string NumeroCuenta { get;set; }

		[DataMember]
		public virtual int? Banco { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual string Agente { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual TablaClaveDto Tablaclave { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(CajaComprobanteDto))]
	public partial class CajaElementoDto : IDtoWithKey
	{
		public CajaElementoDto()
		{
		}
		
		public CajaElementoDto(int mId, int? mMovimiento, int? mElemento, int? mEstado, CajaComprobanteDto mCajascomprobante)
		{
			this.Id = mId;
			this.Movimiento = mMovimiento;
			this.Elemento = mElemento;
			this.Estado = mEstado;
			this.ComprobanteNav = mCajascomprobante;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Movimiento { get;set; }

		[DataMember]
		public virtual int? Elemento { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual CajaComprobanteDto ComprobanteNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(CajaDto))]
	[KnownType(typeof(TablaClaveDto))]
	public partial class CajaComprobanteDto : IDtoWithKey
	{
		public CajaComprobanteDto()
		{
		}
		
		public CajaComprobanteDto(int mId, int? mCaja, int? mTipo, int? mOrigen, double? mValor, int? mCategoria, string mConcepto, string mDescripcion, DateTime? mFecha, int? mUsuario, string mBeneficiario, int? mEstado, int? mNumero, int? mEntidad, CajaDto mCaja1, TablaClaveDto mTablaclave)
		{
			this.Id = mId;
			this.Caja = mCaja;
			this.Tipo = mTipo;
			this.Origen = mOrigen;
			this.Valor = mValor;
			this.Categoria = mCategoria;
			this.Concepto = mConcepto;
			this.Descripcion = mDescripcion;
			this.Fecha = mFecha;
			this.Usuario = mUsuario;
			this.Beneficiario = mBeneficiario;
			this.Estado = mEstado;
			this.Numero = mNumero;
			this.Entidad = mEntidad;
			this.CajaNav = mCaja1;
			this.TipoNav = mTablaclave;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Caja { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual int? Origen { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Categoria { get;set; }

		[DataMember]
		public virtual string Concepto { get;set; }

		[DataMember]
		public virtual string Descripcion { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Usuario { get;set; }

		[DataMember]
		public virtual string Beneficiario { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Numero { get;set; }

		[DataMember]
		public virtual int? Entidad { get;set; }

		[DataMember]
		public virtual CajaDto CajaNav { get;set; }

		[DataMember]
		public virtual TablaClaveDto TipoNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class CarpetaCatastralAnualDto : IDtoWithKey
	{
		public CarpetaCatastralAnualDto()
		{
		}
		
		public CarpetaCatastralAnualDto(double? mValor, string mNombres, int mId, string mDenominacion, int? mConcepto, string mCodigo, double? mBaseimponible, int? mAño)
		{
			this.Valor = mValor;
			this.Nombres = mNombres;
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Concepto = mConcepto;
			this.Codigo = mCodigo;
			this.BaseImponible = mBaseimponible;
			this.Año = mAño;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Concepto { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual double? BaseImponible { get;set; }

		[DataMember]
		public virtual int? Año { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class SoporteDto : IDtoWithKey
	{
		public SoporteDto()
		{
		}
		
		public SoporteDto(int mId, string mDenominacion, int? mTipo, int? mReferencia, int? mNumero, int? mEstado)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Tipo = mTipo;
			this.Referencia = mReferencia;
			this.Numero = mNumero;
			this.Estado = mEstado;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual int? Tipo { get;set; }

		[DataMember]
		public virtual int? Referencia { get;set; }

		[DataMember]
		public virtual int? Numero { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(SoporteDto))]
	public partial class SoporteMovimientoDto : IDtoWithKey
	{
		public SoporteMovimientoDto()
		{
		}
		
		public SoporteMovimientoDto(int mId, int? mSoporte, int? mNumero, int? mMovimiento, int? mReferencia, string mDescripcion, DateTime? mFecha, int? mEstado, SoporteDto mSoporte1)
		{
			this.Id = mId;
			this.Soporte = mSoporte;
			this.Numero = mNumero;
			this.Movimiento = mMovimiento;
			this.Referencia = mReferencia;
			this.Descripcion = mDescripcion;
			this.Fecha = mFecha;
			this.Estado = mEstado;
			this.SoporteNav = mSoporte1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Soporte { get;set; }

		[DataMember]
		public virtual int? Numero { get;set; }

		[DataMember]
		public virtual int? Movimiento { get;set; }

		[DataMember]
		public virtual int? Referencia { get;set; }

		[DataMember]
		public virtual string Descripcion { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual SoporteDto SoporteNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(PredioBaseDto))]
	[KnownType(typeof(ContribuyenteDto))]
	public partial class MejoraElementoDto : IDtoWithKey
	{
		public MejoraElementoDto()
		{
		}
		
		public MejoraElementoDto(int mId, int? mMejora, int? mPredio, int? mContribuyente, double? mLongitud, double? mValorpropiedad, double? mAlicuota, double? mTotal, double? mDividendo, int? mEmisiones, int? mEstado, PredioBaseDto mPrediobase, ContribuyenteDto mContribuyente1)
		{
			this.Id = mId;
			this.Mejora = mMejora;
			this.Predio = mPredio;
			this.Contribuyente = mContribuyente;
			this.Longitud = mLongitud;
			this.ValorPropiedad = mValorpropiedad;
			this.Alicuota = mAlicuota;
			this.Total = mTotal;
			this.Dividendo = mDividendo;
			this.Emisiones = mEmisiones;
			this.Estado = mEstado;
			this.PredioNav = mPrediobase;
			this.ContribuyenteNav = mContribuyente1;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Mejora { get;set; }

		[DataMember]
		public virtual int? Predio { get;set; }

		[DataMember]
		public virtual int? Contribuyente { get;set; }

		[DataMember]
		public virtual double? Longitud { get;set; }

		[DataMember]
		public virtual double? ValorPropiedad { get;set; }

		[DataMember]
		public virtual double? Alicuota { get;set; }

		[DataMember]
		public virtual double? Total { get;set; }

		[DataMember]
		public virtual double? Dividendo { get;set; }

		[DataMember]
		public virtual int? Emisiones { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual PredioBaseDto PredioNav { get;set; }

		[DataMember]
		public virtual ContribuyenteDto ContribuyenteNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(MejoraElementoDto))]
	public partial class MejoraDto : IDtoWithKey
	{
		public MejoraDto()
		{
		}
		
		public MejoraDto(int mId, string mDenominacion, string mDecripcion, double? mMontoinvertido, double? mRecuperacionmonto, int? mRecuperacionaños, double? mRecuperacionporcentaje, int? mRecuperacionemisiones, int? mPrediosconteo, double? mSumaavaluos, int? mDividendotipo, double? mDividendovalor, int? mEstado, IList<MejoraElementoDto> mMejoraselementos)
		{
			this.Id = mId;
			this.Denominacion = mDenominacion;
			this.Decripcion = mDecripcion;
			this.MontoInvertido = mMontoinvertido;
			this.RecuperacionMonto = mRecuperacionmonto;
			this.RecuperacionAños = mRecuperacionaños;
			this.RecuperacionPorcentaje = mRecuperacionporcentaje;
			this.RecuperacionEmisiones = mRecuperacionemisiones;
			this.PrediosConteo = mPrediosconteo;
			this.SumaAvaluos = mSumaavaluos;
			this.DividendoTipo = mDividendotipo;
			this.DividendoValor = mDividendovalor;
			this.Estado = mEstado;
			this.ElementosNav = mMejoraselementos;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual string Denominacion { get;set; }

		[DataMember]
		public virtual string Decripcion { get;set; }

		[DataMember]
		public virtual double? MontoInvertido { get;set; }

		[DataMember]
		public virtual double? RecuperacionMonto { get;set; }

		[DataMember]
		public virtual int? RecuperacionAños { get;set; }

		[DataMember]
		public virtual double? RecuperacionPorcentaje { get;set; }

		[DataMember]
		public virtual int? RecuperacionEmisiones { get;set; }

		[DataMember]
		public virtual int? PrediosConteo { get;set; }

		[DataMember]
		public virtual double? SumaAvaluos { get;set; }

		[DataMember]
		public virtual int? DividendoTipo { get;set; }

		[DataMember]
		public virtual double? DividendoValor { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual IList<MejoraElementoDto> ElementosNav { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class RepRecaudacionesCompDetalleDto : IDtoWithKey
	{
		public RepRecaudacionesCompDetalleDto()
		{
		}
		
		public RepRecaudacionesCompDetalleDto(double? mValor, int? mRubroid, string mRubro, string mNombres, int mId, DateTime? mFecha, int? mEstado, int? mConceptoid, string mConcepto, string mCodigo, int? mAnio, int? mOrigen)
		{
			this.Valor = mValor;
			this.Rubroid = mRubroid;
			this.Rubro = mRubro;
			this.Nombres = mNombres;
			this.Id = mId;
			this.Fecha = mFecha;
			this.Estado = mEstado;
			this.Conceptoid = mConceptoid;
			this.Concepto = mConcepto;
			this.Codigo = mCodigo;
			this.Anio = mAnio;
			this.Origen = mOrigen;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual int? Rubroid { get;set; }

		[DataMember]
		public virtual string Rubro { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? Conceptoid { get;set; }

		[DataMember]
		public virtual string Concepto { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? Anio { get;set; }

		[DataMember]
		public virtual int? Origen { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(CobrosNotaDto))]
	public partial class CobrosNotasElementoDto : IDtoWithKey
	{
		public CobrosNotasElementoDto()
		{
		}
		
		public CobrosNotasElementoDto(int mId, int? mNota, int? mTransaccion, int? mEstado, CobrosNotaDto mCobrosnota)
		{
			this.Id = mId;
			this.Nota = mNota;
			this.Transaccion = mTransaccion;
			this.Estado = mEstado;
			this.Cobrosnota = mCobrosnota;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Nota { get;set; }

		[DataMember]
		public virtual int? Transaccion { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual CobrosNotaDto Cobrosnota { get;set; }

	}
	
	[DataContract(IsReference = true)]
	[KnownType(typeof(CobrosNotasElementoDto))]
	public partial class CobrosNotaDto : IDtoWithKey
	{
		public CobrosNotaDto()
		{
		}
		
		public CobrosNotaDto(int mId, DateTime? mFecha, int? mEstado, int? mCobrogenerado, DateTime? mCobrofecha, IList<CobrosNotasElementoDto> mCobrosnotaselementos)
		{
			this.Id = mId;
			this.Fecha = mFecha;
			this.Estado = mEstado;
			this.CobroGenerado = mCobrogenerado;
			this.CobroFecha = mCobrofecha;
			this.CobrosNotasElementos = mCobrosnotaselementos;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual int? CobroGenerado { get;set; }

		[DataMember]
		public virtual DateTime? CobroFecha { get;set; }

		[DataMember]
		public virtual IList<CobrosNotasElementoDto> CobrosNotasElementos { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class RepReversionesFechaDto : IDtoWithKey
	{
		public RepReversionesFechaDto()
		{
		}
		
		public RepReversionesFechaDto(double? mRecargos, double? mRebajas, double? mPago, string mNombres, int mId, DateTime? mFecha, int? mEstado, string mConcepto, string mCodigo, int? mAnio)
		{
			this.Recargos = mRecargos;
			this.Rebajas = mRebajas;
			this.Pago = mPago;
			this.Nombres = mNombres;
			this.Id = mId;
			this.Fecha = mFecha;
			this.Estado = mEstado;
			this.Concepto = mConcepto;
			this.Codigo = mCodigo;
			this.Anio = mAnio;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual double? Recargos { get;set; }

		[DataMember]
		public virtual double? Rebajas { get;set; }

		[DataMember]
		public virtual double? Pago { get;set; }

		[DataMember]
		public virtual string Nombres { get;set; }

		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual DateTime? Fecha { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

		[DataMember]
		public virtual string Concepto { get;set; }

		[DataMember]
		public virtual string Codigo { get;set; }

		[DataMember]
		public virtual int? Anio { get;set; }

	}
	
	[DataContract(IsReference = true)]
	public partial class ConveniosDividendoDto : IDtoWithKey
	{
		public ConveniosDividendoDto()
		{
		}
		
		public ConveniosDividendoDto(int mId, int? mConvenio, int? mDividendo, DateTime? mVencimiento, double? mValor, double? mPagos, int? mEstado)
		{
			this.Id = mId;
			this.Convenio = mConvenio;
			this.Dividendo = mDividendo;
			this.Vencimiento = mVencimiento;
			this.Valor = mValor;
			this.Pagos = mPagos;
			this.Estado = mEstado;
		}
		
		[DataMember]
		public virtual string DtoKey { get; set; }
		
		[DataMember]
		public virtual int Id { get;set; }

		[DataMember]
		public virtual int? Convenio { get;set; }

		[DataMember]
		public virtual int? Dividendo { get;set; }

		[DataMember]
		public virtual DateTime? Vencimiento { get;set; }

		[DataMember]
		public virtual double? Valor { get;set; }

		[DataMember]
		public virtual double? Pagos { get;set; }

		[DataMember]
		public virtual int? Estado { get;set; }

	}
	
}
#pragma warning restore 1591
