<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +1Lyv+LnyP/Z
</value>
  </data>
</root>